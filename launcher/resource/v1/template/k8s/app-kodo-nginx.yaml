apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deployment-forethought-kodo-kodo-nginx
  name: kodo-nginx
  namespace: forethought-kodo
spec:
  replicas: {{ config.replicas }}
  selector:
    matchLabels:
      app: deployment-forethought-kodo-kodo-nginx
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deployment-forethought-kodo-kodo-nginx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - deployment-forethought-kodo-kodo-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - image: {{ config.fullImagePath }}
        imagePullPolicy: {{ settings.imagePullPolicy }}
        name: kodo-nginx
        ports:
        - containerPort: 80
          name: 80tcp802
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: kodo-web-config
      imagePullSecrets:
      - name: registry-key
      restartPolicy: Always
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          defaultMode: 256
          name: kodo-nginx
          optional: false
        name: kodo-web-config

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    {% if settings.domain.kodoLoadBalancerType == "intranet" %}
    service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: "intranet"
    {% endif %}
  name: kodo-nginx
  namespace: forethought-kodo
spec:
  externalTrafficPolicy: Local
  ports:
  - name: 80tcp4432
    port: 443
    protocol: TCP
    targetPort: 80
  - name: 80tcp802
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: deployment-forethought-kodo-kodo-nginx
  type: LoadBalancer
