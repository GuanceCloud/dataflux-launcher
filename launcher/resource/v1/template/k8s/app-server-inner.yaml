apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deployment-func2-server-inner
  name: server-inner
  namespace: func2
spec:
  replicas: {{ config.replicas }}
  selector:
    matchLabels:
      app: deployment-func2-server-inner
  template:
    metadata:
      labels:
        app: deployment-func2-server-inner
    spec:
      containers:
      - args:
        - ./run-server.sh
        env:
        - name: DFF__IS_STREAKING
          value: "true"
        image: {{ config.fullImagePath }}
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 8088
          name: 8088tcp80882
          protocol: TCP
        resources: {}
        tty: true
        volumeMounts:
        - mountPath: /data/user-config.yaml
          name: user-config
          subPath: user-config.yaml
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: registry-key
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 292
          name: user-config
          optional: false
        name: user-config

---

apiVersion: v1
kind: Service
metadata:
  name: server-inner
  namespace: func2
spec:
  ports:
  - name: 8088tcp80882
    port: 8088
    protocol: TCP
    targetPort: 8088
  selector:
    app: deployment-func2-server-inner
  type: ClusterIP
