# 报错告警所使用的环境名
envName: DataFlux
isInternalAuth: true

protocol: "https"
hostname: "{{ domain.subDomain.console }}.{{ domain.domain }}"

database:
    # 测试环境容器外使用地址
    connection: "mysql+pymysql://{{mysql.core.user}}:{{mysql.core.password}}@{{mysql.base.host}}:{{mysql.base.port}}/{{mysql.core.database}}?charset=utf8"
    pool_size: 50
    max_overflow: 10
    echo: false

# Elasticsearch Server 配置
ElasticsearchServer:
  protocol: {{ 'https' if elasticsearch.ssl else 'http' }}
  host: {{ elasticsearch.host }}
  port: {{ elasticsearch.port }}
  user: {{ elasticsearch.user }}
  password: {{ elasticsearch.password }}
  timeout: 30

kodo:
  host: kodo-inner.forethought-kodo
  port: 9527
  timeout: 60
  installCmd: 'DW_KODO=https://{{ domain.subDomain.kodo }}.{{ domain.domain }} DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} bash -c "$(curl https://static.dataflux.cn/dataway/install.sh)"'
  upgradeCmd: 'DW_KODO=https://{{ domain.subDomain.kodo }}.{{ domain.domain }} DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_UPGRADE=1  bash -c "$(curl https://static.dataflux.cn/dataway/install.sh)"'
  versionUrl: "https://static.dataflux.cn/dataway/version"

# 报警机器人
robot:
  url: 

# Cache
redis:
  # 内网
  host: {{redis.host}}
  port: {{redis.port}}
  db: 1
  password: {{redis.password}}
  max_connections: 100

# inner app 回调临时地址
inner_app_webhook_url: http://trigger.forethought-inner-app:9000/api/v1/trigger/webhook

# 告警日志回调地址
alert_callback_url: http://front-backend.forethought-core:5000/api/v1/webhooks/workspace/{}/rule/{}/type/{}/forward_to

secret:
  frontAuth: {{ (other.core.secret or {}).frontAuth}}
  manageAuth: {{ (other.core.secret or {}).manageAuth}}
  shareAuth:  {{ (other.core.secret or {}).shareAuth}}
  encryptKey: {{ (other.core.secret or {}).encryptKey }}

# 默认邀请配置
invitation_set:
  enable: false
  invite_url: "https://auth.{{ domain.domain }}/join/workspace?uuid={}"
  sender: DataFlux
  title: "工作空间邀请"
  method:
    - email

# 消息服务
message_desk_set:
  enable: true
  use_https: false
  host: "message-desk.middleware"
  port: 8088
  timeout: 10
  ak_enable: false
  ak_id: 
  ak_secret: 

celery:
  name: "Celery"
  celery_broker_db: 2
  celery_result_db: 3
  cron_task:
    cron_notification:
      minute: '*/30'  

sysDatawaySet:
  defaultCfg:
    token: {{ (other.workspace or {}).token }}
    timeout: 3
    
staticResource:
  domain: "https://{{ domain.subDomain.staticResource }}.{{ domain.domain }}"

share_set:
  share_url: "https://{{ domain.subDomain.consoleApi }}.{{ domain.domain }}/api/v1/auth-token/{share_code}/login?isAuth={is_auth}&?code={code}"
