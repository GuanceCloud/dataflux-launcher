debug: False

tmpDir: /tmp/k8s

namespaces:
  - forethought-core
  # - forethought-inner-app
  - forethought-webclient
  - forethought-kodo
  # - func
  - func2
  - middleware
  - utils

services:
  - namespace: forethought-core
    services:
    - key: management-backend
      name: 后台管理平台 API
      image: core
      replicas: 2

    - key: inner
      name: Inner API
      image: core
      replicas: 2

    - key: front-backend
      name: 用户前台 API
      image: core
      replicas: 2

    - key: integration-scanner
      name: 集成扫描 Worker
      image: core
      replicas: 0
      deleted: True

    - key: core-worker
      name: Worker
      image: core
      replicas: 2

    - key: core-worker-correlation
      name: Worker Correlation
      image: core
      replicas: 2

    - key: core-worker-beat
      name: Worker Beat
      image: core
      replicas: 1

    - key: open-api
      name: Open API
      image: core
      replicas: 2

    - key: websocket
      name: Websocket
      image: core
      replicas: 0
      deleted: True

    - key: static-resource-nginx
      name: 静态资源服务
      image: nginx
      replicas: 1

    - key: integration-nginx
      name: 集成服务
      image: nginx
      replicas: 0
      deleted: True

    configmaps:
    - key: core
      mapname: core
      mapkey: config.yaml
      format: yaml
      services:
      - management-backend
      - inner
      - front-backend
      - core-worker
      - core-worker-correlation
      - core-worker-beat
      - open-api
      # - websocket
      template: forethought-backend.yaml

    # - key: integrationNginx
    #   mapname: integration-nginx
    #   mapkey: integration.conf
    #   services:
    #   - integration-nginx
    #   template: integration-nginx.conf

    - key: staticResourceNginx
      mapname: static-resource-nginx
      mapkey: static-resource-nginx.conf
      services:
      - static-resource-nginx
      template: static-resource-nginx.conf

    pvcs:
    - name: ft-sysconfig
      storage: 5Gi

    - name: front-backend-logs
      storage: 5Gi

    - name: management-backend-logs
      storage: 5Gi

    - name: inner-logs
      storage: 5Gi

    - name: core-worker-logs
      storage: 5Gi

    - name: core-worker-correlation-logs
      storage: 5Gi

    - name: core-worker-beat-logs
      storage: 5Gi

    - name: open-api-logs
      storage: 5Gi

  # - namespace: forethought-inner-app
  #   services:
  #   - key: trigger
  #     name: 通知触发器
  #     image: trigger
  #     replicas: 0
  #     deleted: True
  #
  #   configmaps:
  #   - key: innerAppTrigger
  #     mapname: trigger-conf
  #     mapkey: config.yaml
  #     format: yaml
  #     services:
  #     - trigger
  #     template: inner-app-trigger-config.yaml

  - namespace: forethought-webclient
    services:
    - key: management-webclient
      name: 管理后台前端
      image: management-webclient
      replicas: 1

    - key: front-webclient
      name: 用户前台前端
      image: front-webclient
      replicas: 1

    - key: dataflux-doc
      name: 文档中心
      image: dataflux-doc
      replicas: 1

    configmaps:
    - key: frontWeb
      mapname: front-web-config
      mapkey: config.js
      format: js
      services:
      - front-webclient
      template: front-web.js

    - key: frontNginx
      mapname: front-nginx-config
      mapkey: nginx.conf
      services:
      - front-webclient
      template: front-nginx.conf

    - key: datafluxDocNginx
      mapname: dataflux-doc-nginx-config
      mapkey: nginx.conf
      services:
      - dataflux-doc
      template: dataflux-doc-nginx.conf

    - key: managementWeb
      mapname: management-web-config
      mapkey: config.json
      format: json
      services:
      - management-webclient
      template: management-web.json

    - key: managementNginx
      mapname: management-nginx-config
      mapkey: nginx.conf
      services:
      - management-webclient
      template: management-nginx.conf

  - namespace: forethought-kodo
    services:
    - key: kodo
      name: Kodo
      image: kodo
      replicas: 3

    - key: kodo-inner
      name: Kodo Inner
      image: kodo
      replicas: 1

    - key: kodo-x
      name: Kodo X
      image: kodo
      replicas: 3

    - key: kodo-nginx
      name: Kodo Nginx
      image: nginx
      replicas: 3

    - key: kodo-asynq-client
      name: Kodo Asynq Client
      image: kodo
      replicas: 1

    - key: kodo-ws
      name: Kodo Websocket
      image: kodo
      replicas: 1

    - key: python-pprof-parser
      name: Python Profiling Parser
      image: pprofparser
      replicas: 1

    - key: jfr-parser
      name: Java Profiling Parser
      image: jfr-parser
      replicas: 1

    configmaps:
    - key: kodo
      mapname: kodo
      mapkey: config.yaml
      format: yaml
      services:
      - kodo
      - kodo-asynq-client
      template: kodo.yaml

    - key: kodoInner
      mapname: kodo-inner
      mapkey: config.yaml
      format: yaml
      services:
      - kodo-inner
      template: kodo-inner.yaml

    - key: kodoX
      mapname: kodo-x
      mapkey: config.yaml
      format: yaml
      services:
      - kodo-x
      template: kodo-x.yaml

    - key: kodoNginx
      mapname: kodo-nginx
      mapkey: kodo.conf
      services:
      - kodo-nginx
      template: kodo-nginx.conf

    - key: kodoWS
      mapname: kodo-ws
      mapkey: config.yaml
      format: yaml
      services:
      - kodo-ws
      template: kodo-ws.yaml

    - key: jfrParser
      mapname: jfr-parser
      mapkey: config.yaml
      format: yaml
      services:
      - jfr-parser
      template: jfr-parser.yaml

    - key: pythonPprofParser
      mapname: python-pprof-parser
      mapkey: config.yaml
      format: yaml
      services:
      - python-pprof-parser
      template: python-pprof-parser.yaml

    - key: kodoLicense
      mapname: kodo-license
      mapkey: license
      services:
      - kodo
      - kodo-inner
      - kodo-x
      - kodo-ws
      - kodo-asynq-client
      template: kodo-license

    pvcs:
    - name: kodo-logs
      storage: 10Gi

    - name: kodo-inner-logs
      storage: 10Gi

    - name: profiling-data
      storage: 100Gi

  # - namespace: func
  #   services:
  #   - key: func
  #     name: 函数计算
  #     image: func
  #     replicas: 0
  #     deleted: True

  #   - key: func-inner
  #     name: 函数计算 Inner
  #     image: func
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-beat
  #     name: 函数计算 Worker Beat
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-debugger
  #     name: 函数计算 Worker Debugger
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-rpc-crontab
  #     name: 函数计算 Worker RPC
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-rpc
  #     name: 函数计算 Worker RPC
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-crontab
  #     name: 函数计算 Worker Crontab
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-utils
  #     name: 函数计算 Worker Utils
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-batch
  #     name: 函数计算 Worker Batch
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   - key: func-worker-batch-builtin
  #     name: 函数计算 Worker Batch builtin
  #     image: func-worker
  #     replicas: 0
  #     deleted: True

  #   configmaps:
  #   - key: func
  #     mapname: func-config
  #     mapkey: config.yaml
  #     format: yaml
  #     services:
  #     - func
  #     template: func-config.yaml

  #   - key: funcInner
  #     mapname: func-inner-config
  #     mapkey: config.yaml
  #     format: yaml
  #     services:
  #     - func-inner
  #     template: func-inner-config.yaml

  #   - key: funcWorker
  #     mapname: func-worker-config
  #     mapkey: config.yaml
  #     format: yaml
  #     services:
  #     - func-worker-beat
  #     - func-worker-debugger
  #     - func-worker-rpc
  #     - func-worker-crontab
  #     - func-worker-utils
  #     - func-worker-batch
  #     - func-worker-batch-builtin
  #     template: func-worker-config.yaml

  - namespace: func2
    services:
    - key: server
      name: 函数计算
      image: dataflux-func
      replicas: 2

    - key: server-inner
      name: 函数计算 Inner
      image: dataflux-func
      replicas: 2

    - key: worker-beat
      name: 任务队列定时器
      image: dataflux-func
      replicas: 1

    - key: worker-0
      name: 0 号任务队列
      image: dataflux-func
      replicas: 2

    - key: worker-1-6
      name: 1-6 号任务队列
      image: dataflux-func
      replicas: 5

    - key: worker-7
      name: 7 号任务队列
      image: dataflux-func
      replicas: 2

    - key: worker-8-9
      name: 8-9 号任务队列
      image: dataflux-func
      replicas: 0
      deleted: True

    - key: worker-8
      name: 8 号任务队列
      image: dataflux-func
      replicas: 2

    - key: worker-9
      name: 9 号任务队列
      image: dataflux-func
      replicas: 2

    configmaps:
    - key: func2Config
      mapname: user-config
      mapkey: user-config.yaml
      format: yaml
      services:
      - server
      - server-inner
      - worker-beat
      - worker-0
      - worker-1-6
      - worker-7
      - worker-8
      - worker-9
      template: func2-user-config.yaml

    - key: func2Requirements
      mapname: requirements-config
      mapkey:  requirements.txt
      services:
      - worker-beat
      - worker-0
      - worker-1-6
      - worker-7
      - worker-8
      - worker-9
      template: func2-requirements.txt

    pvcs:
    - name: func-resources
      storage: 30Gi

    - name: func-packages
      storage: 5Gi

  - namespace: middleware
    services:
    - key: message-desk
      name: 消息中心 API
      image: message-desk
      replicas: 1
      # deleted: True
      

    - key: message-desk-worker
      name: 消息中心 Worker
      image: message-desk-worker
      replicas: 1
      # deleted: True

    - key: nsqadmin
      name: NSQ Admin
      image: nsq
      replicas: 1

    - key: nsqlookupd
      name: NSQ Lookupd
      image: nsq
      replicas: 1

    - key: nsqd
      name: NSQ Node
      image: nsq
      replicas: 1

    - key: nsqd2
      name: NSQ Node 02
      image: nsq
      replicas: 1

    - key: nsqd3
      name: NSQ Node 03
      image: nsq
      replicas: 1

    - key: kapacitor
      name: Kapacitor
      image: kapacitor
      replicas: 0
      deleted: True

    - key: kapacitor02
      name: Kapacitor 02
      image: kapacitor
      replicas: 0
      deleted: True

    configmaps:
    - key: messageDeskApi
      mapname: message-desk
      mapkey: config.yaml
      format: yaml
      services:
      - message-desk
      template: message-desk-api.yaml

    - key: messageDeskWorker
      mapname: message-desk-worker
      mapkey: config.yaml
      format: yaml
      services:
      - message-desk-worker
      template: message-desk-worker.yaml

    pvcs:
    - name: message-desk-logs
      storage: 20Gi

    - name: message-desk-worker-logs
      storage: 20Gi

    - name: nsqd-data-1
      storage: 40Gi

    - name: nsqd-data-2
      storage: 40Gi

    - name: nsqd-data-3
      storage: 40Gi

    # - name: kapacitor-data-01
    #   storage: 40Gi

    # - name: kapacitor-data-02
    #   storage: 40Gi

  - namespace: utils
    services:
    - key: utils-server
      name: 公共工具服务
      image: utils-server
      replicas: 1

    - key: internal-dataway
      name: 内置 DataWay
      image: internal-dataway
      replicas: 1

    - key: datakit-pl-debug
      name: 内置 Pipeline 调试服务
      image: datakit
      replicas: 1

    - key: dialtesting
      name: 拨测服务
      image: kodo
      replicas: 1

    - key: data-warehouse
      name: 数据仓库管理
      image: data-warehouse
      replicas: 0
      deleted: True

    configmaps: 
    - key: internalDataWay
      mapname: dataway-config
      mapkey: config.yaml
      format: yaml
      services:
      - internal-dataway
      template: internal-dataway-config.yaml

    - key: internalDataWayLicense
      mapname: dataway-license
      mapkey: license
      services:
      - internal-dataway
      template: internal-dataway-license

    - key: dataWarehouseConfig
      mapname: data-warehouse-config
      mapkey: config.yaml
      format: yaml
      services:
      - data-warehouse
      template: data-warehouse-config.yaml

    - key: dialtestingConfig
      mapname: dialtesting-config
      mapkey: config.yaml
      format: yaml
      services:
      - dialtesting
      template: dialtesting-config.yaml

    pvcs:
    - name: internal-dataway-cache
      storage: 10Gi

    - name: internal-dataway-logs
      storage: 20Gi

    - name: data-warehouse-logs
      storage: 20Gi


databases:
  core: df_core
  message_desk: df_message_desk
  func: df_func

influxDB:
  databases:
    - internal_system
    # - internal_alert
    # - internal_baseline
    # - internal_keyevent

  replication:
  - rpName: rp0
    duration: 24    # 1d

  - rpName: rp1
    duration: 168   # 7d

  - rpName: rp1.1
    duration: 336   # 14d

  - rpName: rp2
    duration: 720   # 30d

  - rpName: rp3
    duration: 2160  # 90d

  - rpName: rp4
    duration: 4320  # 180d
    default: True

  - rpName: rp5
    duration: 8640  # 1 年

  - rpName: rp6
    duration: 25920  # 3 年

defaultSubdomain:
  console: dataflux
  consoleApi: df-api
  docs: df-docs
  management: df-management
  managementApi: df-management-api
  # websocket: df-websocket
  function: df-func
  openApi: df-openapi
  kodo: df-kodo
  staticResource: df-static-res

updates:
  - namespace: forethought-core
    project: core
    noDatabase: False
    dataKey: content
    config:
      - key: core
        mapName: core
        mapKey: config.yaml
        format: yaml

      - key: staticResourceNginx
        mapName: static-resource-nginx
        mapKey: static-resource-nginx.conf


  - namespace: forethought-webclient
    project: frontWeb
    noDatabase: True
    dataKey: data
    config:
      - key: frontNginx
        mapName: front-nginx-config
        mapKey: nginx.conf
      - key: frontWeb
        mapName: front-web-config
        mapKey: config.js
        format: js
      - key: managementNginx
        mapName: management-nginx-config
        mapKey: nginx.conf
      - key: managementWeb
        mapName: management-web-config
        mapKey: config.json
        format: json
      - key: datafluxDocNginx
        mapName: dataflux-doc-nginx-config
        mapKey: nginx.conf

  - namespace: forethought-kodo
    project: kodo
    noDatabase: True
    dataKey: content
    config:
      - key: kodo
        mapName: kodo
        mapKey: config.yaml
        format: yaml

      - key: kodoInner
        mapName: kodo-inner
        mapKey: config.yaml
        format: yaml

      - key: kodoNginx
        mapName: kodo-nginx
        mapKey: kodo.conf

      - key: kodoX
        mapName: kodo-x
        mapKey: config.yaml
        format: yaml

      - key: kodoWS
        mapName: kodo-ws
        mapKey: config.yaml
        format: yaml

      - key: jfrParser
        mapName: jfr-parser
        mapKey: config.yaml
        format: yaml

      - key: pythonPprofParser
        mapName: python-pprof-parser
        mapKey: config.yaml
        format: yaml

  # - namespace: func
  #   project: func
  #   noDatabase: False
  #   dataKey: data
  #   config:
  #     - key: func
  #       mapName: func-config
  #       mapKey: config.yaml

  #     - key: funcInner
  #       mapName: func-inner-config
  #       mapKey: config.yaml

  #     - key: funcWorker
  #       mapName: func-worker-config
  #       mapKey: config.yaml

  - namespace: func2
    project: dataflux-func
    noDatabase: False
    dataKey: data
    config:
      - key: func2Config
        mapName: user-config
        mapKey: user-config.yaml
        format: yaml

      - key: func2Requirements
        mapName: requirements-config
        mapKey: requirements.txt

  - namespace: middleware
    project: messageDesk
    noDatabase: False
    dataKey: data
    config:
      - key: messageDeskApi
        mapName: message-desk
        mapKey: config.yaml
        format: yaml

      - key: messageDeskWorker
        mapName: message-desk-worker
        mapKey: config.yaml
        format: yaml

  - namespace: utils
    project: dataWarehouse
    noDatabase: True
    dataKey: data
    config:
      - key: internalDataWay
        mapName: dataway-config
        mapKey: config.yaml
        format: yaml

  - namespace: utils
    project: dialtesting
    noDatabase: False
    dataKey: data
    config:
      - key: dialtestingConfig
        mapname: dialtesting-config
        mapkey: config.yaml
        format: yaml

