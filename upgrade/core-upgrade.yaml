upgrade:
  - seq: 1
    database: |-
      -- cq 2020/0212
      CREATE TABLE `main_influx_cq` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ifcq-',
        `influxUUID` varchar(48) NOT NULL DEFAULT '',
        `cqName` varchar(128) NOT NULL DEFAULT 'cq_' COMMENT 'CQ name',
        `namePrefix` varchar(48) NOT NULL DEFAULT '',
        `sampleEvery` varchar(48) NOT NULL DEFAULT '30m' COMMENT 'RESAMPLE every XXX',
        `sampleFor` varchar(48) NOT NULL DEFAULT '1h' COMMENT 'RESAMPLE for XXX',
        `db` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB 名称',
        `rp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则只用 @db 的默认 RP',
        `cqrp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则用 CQ 默认的 RP, 比如 rpcq',
        `measurement` varchar(48) NOT NULL DEFAULT '' COMMENT '指标名',
        `cqMeasName` varchar(128) NOT NULL DEFAULT '' COMMENT 'cq 后的指标名，，不指定则  @name',
        `keepTags` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否在 CQ 的 measurement 上保 原始 tag， 然原始 tag 会被转换成 field',
        `groupByTime` varchar(48) NOT NULL DEFAULT '30m',
        `groupByOffset` varchar(48) NOT NULL DEFAULT '15m',
        `funcFields` json NOT NULL COMMENT '["""mean("field-1") AS "field-1-mean"""",...]',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 2/18
      ALTER TABLE main_influx_db ADD COLUMN cqrp VARCHAR(48) NOT NULL AFTER influxRpName;
      UPDATE main_influx_db set cqrp='autogen';

      ALTER TABLE main_kapa DROP FOREIGN KEY kapa_is_uuid;

      -- 场景新增 指标集数据集过滤条件
      ALTER TABLE `biz_scene` 
      ADD COLUMN `measurementLimit` json NOT NULL COMMENT '指标集限制' AFTER `describe`,
      ADD COLUMN `filter` json NOT NULL COMMENT '过滤条件' AFTER `measurementLimit`;

      -- 设置场景历史数据中的 数据范围
      UPDATE biz_scene set filter='[]', measurementLimit='[]' where status=0;

      -- 节点新增 icon 地址配置
      ALTER TABLE `biz_node` 
      ADD COLUMN `iconSet` json NULL COMMENT '图标设置' AFTER `name`;

      -- 同时初始化历史数据
      UPDATE biz_node set iconSet='{}';

      -- 修复生产环境中 已删除场景的分享设置
      UPDATE biz_share_config set status=3 WHERE status=0 and resourceUUID in (select DISTINCT(uuid) from biz_scene WHERE status=3);

  - seq: 2
    database: |-
      -- 管理员添加权限
      ALTER TABLE main_manage_account ADD COLUMN role VARCHAR(10) NOT NULL COMMENT "角色  admin: 管理员/ dev: 开发者" AFTER name;
      -- 数据处理
      update main_manage_account set role="admin" where role = "";

  - seq: 3
    database: |-
      -- 新增 视图变量排序字段
      ALTER TABLE `biz_variable` ADD COLUMN `valueSort` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT '视图变量的值排序' AFTER `definition`;

      -- 修复创建工作空间未指定成员时默认添加了 空字符串UUID的成员导致的垃圾数据, 修复方式：直接设置删除状态
      UPDATE main_account_workspace set `status`=3 WHERE (accountUUID="" or (accountUUID not REGEXP 'acnt[-_]')) and `status`!= 3;
      UPDATE main_account_privilege set `status`=3 WHERE (accountUUID="" or (accountUUID not REGEXP 'acnt[-_]')) and `status`!= 3;

      -- query 增加枚举类型
      ALTER TABLE `biz_query` MODIFY COLUMN `qtype` enum('HTTP','TSQL','SQL','CUSTOM_FUNC') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '查询类型' AFTER `query`;

  - seq: 4
    database: |-
      -- 增加内置 DataWay
      INSERT INTO `main_agent` (`uuid`, `name`, `version`, `host`, `port`, `domainName`, `workspaceUUID`, `status`, `creator`, `updator`, `createAt`, `uploadAt`, `deleteAt`, `updateAt`)
      VALUES ('agnt_internal_dataway_1', '内置 DataWay', '0.1-349-gfff24b0', '', 0, '', 'wksp_system', 0, '', '', UNIX_TIMESTAMP(), UNIX_TIMESTAMP(), -1, UNIX_TIMESTAMP());

  # 3.16 迭代
  - seq: 5
    database: |-
      -- 节点新增 是否打开继承开关字段，默认打开
      ALTER TABLE `biz_node` ADD COLUMN `isInheritance` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否继承' AFTER `filter`;

      -- 节点上新增2个字段，用来控制子节点的图标和继承信息
      ALTER TABLE `biz_node`
      ADD COLUMN `subIconSet` json NULL COMMENT '子节点的图标信息' AFTER `exclude`,
      ADD COLUMN `subIsInheritance` tinyint(1) NOT NULL DEFAULT 1 COMMENT '子节点是否继承父节点过滤条件' AFTER `subIconSet`;

      --  新增ck 黑名单表  03/16/2020
      CREATE TABLE `main_ck_blacklist` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ckbl-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB uuid',
        `measurement` varchar(48) NOT NULL DEFAULT '' COMMENT '指标名',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    config:
      core: |-
        kodo:
          # 在原有的 命令中追加了 DW_VERSION
          upgradeCmd: 'DW_KODO=http://172.16.0.12:10556  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_VERSION={version} DW_UPGRADE=1  bash -c "$(curl http://cloudcare-kodo.oss-cn-hangzhou.aliyuncs.com/dataway/test/install.sh)"'

        clickhouse:
          # 新增 clickhouse 启用开关配置项，默认值 false，可以不配置
          open: false
  # 3.31 迭代
  - seq: 6
    database: |-
      # 新增 最大时间线设置
      ALTER TABLE `main_workspace` ADD COLUMN `maxTsCount` int(0) NOT NULL DEFAULT 100 COMMENT '最大时间线' AFTER `dataRestriction`;


      # 衍生节点缓存表
      CREATE TABLE `biz_decorate_node` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 node- 前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `sceneUUID` varchar(48) NOT NULL COMMENT '场景 uuid',
        `parentUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '父节点 uuid',
        `name` varchar(128) NOT NULL COMMENT '子节点名称',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `scene_node_fk` (`sceneUUID`),
        KEY `node_parent_uuid_fk` (`parentUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      # 新增工作空间License表
      CREATE TABLE `main_workspace_license` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT 'license lcn-',
        `workspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `instanceId` varchar(64) NOT NULL DEFAULT '' COMMENT 'LicenseId',
        `extend` json NOT NULL COMMENT '额外拓展字段',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: 正常/2: 禁用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`) COMMENT '主键',
        UNIQUE KEY `uk_instanceId` (`instanceId`) COMMENT 'license id 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      # 新增 加载标记
      ALTER TABLE `biz_node` ADD COLUMN `isLoading` tinyint(1) NULL AFTER `status`;

  # 4.09 迭代
  - seq: 7
    database: |-
      -- 触发规则 表新增 crontab
      ALTER TABLE `biz_rule`
      ADD COLUMN `crontabInfo` json NULL COMMENT 'crontab配置信息' AFTER `tickInfo`;

      ALTER TABLE `main_workspace_license` ADD COLUMN `version` varchar(48) NOT NULL  COMMENT 'license 版本' AFTER `instanceId`;
      ALTER TABLE `main_workspace_license` ADD COLUMN `expire` int(11) NOT NULL  COMMENT 'license 过期时间' AFTER `instanceId`;
      ALTER TABLE `main_workspace` ADD COLUMN `versionInfo` json  COMMENT '版本信息' AFTER `desc`;

      -- 新增 是否自动聚合
      ALTER TABLE `main_workspace` ADD COLUMN `autoAggregation` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '是否自动聚合' AFTER `status`;

      -- 新增 告警历史保留时长
      ALTER TABLE `main_workspace` ADD COLUMN `alarmHistoryPeriod` varchar(48) NOT NULL DEFAULT '' COMMENT '告警历史保留时长' AFTER `status`;

      ALTER TABLE `main_workspace` CHANGE `dataRestriction` `dataRestriction` JSON  NULL  COMMENT '数据权限';

      -- 特别说明: 此为 PAAS 版必须执行的，用来更新工作空间中的 时间线和RP等信息
      update main_workspace set alarmHistoryPeriod="rp2", maxTsCount=-1;

    config:
      core: |-
        # 静态文件域名
        staticResource:
          domain: "http://static.cloudcare.cn:10561"

  # 4.21 迭代
  - seq: 8
    database: |-
      -- 新增 db rp时长
      ALTER TABLE `main_workspace` ADD COLUMN `rpName` varchar(48) NOT NULL DEFAULT '' COMMENT 'db rp' AFTER `status`;

      -- 更新寄存rp db数据
      update main_workspace ws, main_influx_db db set ws.rpName = db.`influxRpName`  where ws.`dbUUID` = db.`uuid` and ws.`rpName` = "";

      -- 刷新 versionInfo字段数据 pass版对应 unlimited
      UPDATE main_workspace set versionInfo='{"rp": "rp5", "name": "无限版", "version": "unlimited", "ruleCount": -1, "maxTsCount": -1, "ruleActivePeriod": -1}';

      -- 节点新增 指标集字段
      ALTER TABLE `biz_node` ADD COLUMN `subTagKeyMeasurements` json NULL COMMENT '衍生节点标签指标集' AFTER `isInheritance`;
      -- 设置默认值
      UPDATE `biz_node` set subTagKeyMeasurements='[]';



  # 4.30 迭代
  - seq: 9
    database: |-
      -- 新增 是否开启数仓字段
      ALTER TABLE `main_workspace` ADD COLUMN `isOpenWarehouse` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否开启数据仓库' AFTER `dbUUID`;

      -- 新增 集成 fileName 用于排序
      ALTER TABLE `biz_integration` ADD COLUMN `fileName` varchar(128)  DEFAULT "" COMMENT '文件名 用于排序' AFTER `name`;

      -- 更新 main_ck_blacklist
      drop table main_ck_blacklist;

      -- 创建CK同步表
      CREATE TABLE `main_ck_datasync` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ckds-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB uuid',
        `measurement` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '指标名',
        `tableName` varchar(128) NOT NULL DEFAULT '' COMMENT 'ck table name',
        `startTime` int(11) NOT NULL COMMENT '单位: 秒',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 更新 main_influx_cq
      drop table main_influx_cq;

      -- 重建 CQ表, 原表无数据
      CREATE TABLE `main_influx_cq` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ifcq-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `sampleEvery` varchar(48) NOT NULL DEFAULT '30m' COMMENT 'RESAMPLE every XXX',
        `sampleFor` varchar(48) NOT NULL DEFAULT '1h' COMMENT 'RESAMPLE for XXX',
        `measurement` varchar(256) NOT NULL DEFAULT '' COMMENT '指标名',
        `rp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则只用 @db 的默认 RP',
        `cqrp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则用 CQ 默认的 RP, 比如 rpcq',
        `aggrFunc` varchar(48) NOT NULL DEFAULT 'mean',
        `groupByTime` varchar(48) NOT NULL DEFAULT '30m',
        `groupByOffset` varchar(48) NOT NULL DEFAULT '15m',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 5.21 迭代
  - seq: 10
    database: |-
      -- 新增 清除数据时间
      ALTER TABLE `main_workspace_license` ADD COLUMN  `disableTime`  int(11) NULL DEFAULT 0 COMMENT '数据失效时间' AFTER `expire`;


  # 6.09 迭代
  - seq: 11
    config:
      core: |-
        # 此处配置的是 FT-CORE 默认的系统工作空间配置
        sysDatawaySet:
          defaultCfg:
            token: 此处是系统工作空间的token
            timeout: 3

        # ElasticsearchServer 服务器配置
        ElasticsearchServer:
          protocol: http
          host: ft-elasticsearch.middleware.svc.cluster.local
          port: 9200
          user: username
          password: xxxxxxxxxxx
          timeout: 30

    database: |-
      -- 新增 es 生命周期管理
      ALTER TABLE `main_workspace` ADD COLUMN  `esRP`  json NULL COMMENT 'es 生命周期管理' AFTER `autoAggregation`;

      -- 新增 日志提取表
      CREATE TABLE `main_log_extract_rule` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 taly-',
        `batchesID` varchar(48) NOT NULL COMMENT 'func批处理id',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `source` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '来源',
        `funcId` varchar(48) NOT NULL DEFAULT '' COMMENT '解析方法',
        `url` varchar(128) NOT NULL DEFAULT '' COMMENT 'url',
        `funcKwargsJSON` json NOT NULL COMMENT 'func函数所需参数',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_batchesID` (`batchesID`) COMMENT 'batchesID  做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 6.30 迭代
  - seq: 12
    config:
      core: |-
        # kodo 配置中的 upgradeCmd配置项中，减少 `DW_VERSION={version}`项
        kodo:
          upgradeCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_UPGRADE=1  bash -c "$(curl https://static.dataflux.cn/dataway/install.sh)"'

    database: |-
      -- 新增apm配置表
      CREATE TABLE `main_apm_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 apmc-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `service` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '服务名',
        `config` json NOT NULL COMMENT 'apm配置参数',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `k_ws_uuid` (`workspaceUUID`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 删除 main_agent 表的 workspace_uuid 索引, 并添加url字段
      ALTER TABLE `main_agent`
      ADD COLUMN `url` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '完整地址' AFTER `version`;


  # 7.16 迭代
  - seq: 13
    config:
      core: |-
        # 默认系统工作空间设置
        SystemWorkspaceSet:
          uuid: wksp_system

    database: |-
      -- 为规则类型`type`新增一个类型值`aggs`
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 为视图添加额外拓展字段
      ALTER TABLE `biz_dashboard` ADD COLUMN `extend` json NULL COMMENT '额外拓展字段' AFTER `type`;
      -- 刷视图数据
      UPDATE biz_dashboard set extend='{}' WHERE `status`=0

  # 8.4 迭代
  - seq: 14
    config:
      core: |-
        # 工单系统配置
        TicketServer:
          use_https: true
          port: 443
          host: "ticket-api.cloudcare.cn"
          ak_id: "dataflux-core" # 本系统在工单系统中的名字
          ak_secret: "xxxxxx"   # 本系统在工单系统中对应的安全密匙
          timeout: 30

  # 8.20 迭代
  - seq: 15
    database: |-
      -- 场景新增好图标字段, 并默认初始化为 空字典
      ALTER TABLE `biz_scene` ADD COLUMN `iconSet` json COMMENT '图标设置' AFTER `workspaceUUID`;
      UPDATE biz_scene SET iconSet='{}';

  # 9.08 迭代
  - seq: 16
    database: |-
      -- 新增 对象分类配置表
      CREATE TABLE `biz_object_class_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 objc-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '对象分类名',
        `alias` varchar(128) NOT NULL DEFAULT '' COMMENT '对象分类别名',
        `publicSet` json NOT NULL COMMENT '对象分类列表的公共和默认设置',
        `colSets` json NOT NULL COMMENT '对象分类列表的字段设置列表',
        `extend` json DEFAULT NULL COMMENT '额外拓展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

  # 9.17 迭代
  - seq: 17
    database: |-
      -- 新增 对象分类配置表
      ALTER TABLE `biz_object_class_cfg`
      ADD COLUMN `dashboardUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '视图UUID' AFTER `workspaceUUID`;

      -- 删除掉 原来的模版表
      DROP TABLE IF EXISTS `biz_template`;

      -- 创建系统模版表, 存储各类配置信息
      CREATE TABLE `biz_sys_template` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID systpl-',
        `owner` varchar(48) NOT NULL DEFAULT '' COMMENT '所属目标类型',
        `code` varchar(48) NOT NULL DEFAULT '' COMMENT '命名',
        `note` text NOT NULL COMMENT '备注说明',
        `content` json NOT NULL COMMENT '模版内容',
        `extend` json DEFAULT NULL COMMENT '额外扩展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `template_owner_fk` (`owner`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 历史数据迁移更新
      UPDATE biz_variable set datasource='ftinfluxdb' WHERE datasource='ftinflxdb' and status=0 and datasource !="";
      UPDATE biz_variable set datasource='custom' WHERE type='CUSTOM_LIST' and status=0;
      ALTER TABLE `biz_variable` MODIFY COLUMN `type` enum('QUERY','CUSTOM_LIST','ALIYUN_INSTANCE','TAG','FIELD') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '类型' AFTER `code`;


  # 10.15 迭代
  - seq: 18
    database: |-
      -- 创建系统配置表 用来存储可变动的配置
      DROP TABLE IF EXISTS `main_config`;
      CREATE TABLE `main_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `keyCode` varchar(48) NOT NULL COMMENT '配置项唯一Code',
        `description` text NOT NULL COMMENT '描述信息',
        `value` json NOT NULL COMMENT '配置数据',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`keyCode`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 对象分类配置表新增 tags/fields
      ALTER TABLE `biz_object_class_cfg`
      ADD COLUMN `tags` json NULL COMMENT '当前分类的 tags列表' AFTER `colSets`,
      ADD COLUMN `fields` json NULL COMMENT '当前分类的fields列表' AFTER `tags`,
      ADD COLUMN `retentionPeriod` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '闲置时间-超过此时间之后会删除对象' AFTER `alias`;

      -- 为历史数据设置 tags/fields 的默认值
      UPDATE biz_object_class_cfg set tags='[]' ,fields='[]';

      -- 插入默认的内置对象分类列表
      INSERT INTO `main_config`(`id`, `keyCode`, `description`, `value`) VALUES (1, 'BuiltInObjectClass', '内置对象分类列表', '[\"Servers\"]');


  # 11.19 迭代
  - seq: 19
    config:
      core: |-
        # 工单系统配置
        billingServerSet:
          isOpen: true

    database: |-

      -- 新增的 对象关系图表
      CREATE TABLE `biz_object_relation_graph` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 objrg-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `jsonContent` json NOT NULL COMMENT '关系数据JSON内容',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 工作空间表新增 账单状态字段，
      ALTER TABLE `main_workspace`
      ADD COLUMN `durationSet` json NULL COMMENT '数据保留时长设置' AFTER `enablePublicDataway`,
      ADD COLUMN `versionType` enum('free','pay','unlimited') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'free' COMMENT 'free表示免费版，pay表示付费版' AFTER `durationSet`,
      ADD COLUMN `billingState` enum('free','unlimited','normal','arrearage','expired') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'free' COMMENT '帐户费用状态' AFTER `versionType`;

      -- 新增账单计费配置信息
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', '计量单价配置  priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式', '{\"equation\": {\"ts\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"job\": \"math.ceil((count - discountQuantity)/priceQuantity)*price if count > discountQuantity else 0\", \"tracing\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"logging_keyevent\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\"}, \"priceSet\": {\"ts\": {\"14d\": {\"price\": 1, \"priceQuantity\": 100}, \"30d\": {\"price\": 1.2, \"priceQuantity\": 100}, \"180d\": {\"price\": 1.8, \"priceQuantity\": 100}}, \"job\": {\"price\": 0.04, \"priceQuantity\": 1000}, \"tracing\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"logging_keyevent\": {\"14d\": {\"price\": 0.35, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 0.65, \"priceQuantity\": 1000000}, \"180d\": {\"price\": 1.2, \"priceQuantity\": 1000000}}}, \"discountQuantitySet\": {\"ts\": 0, \"job\": 1000, \"datakit\": 0, \"tracing\": 0, \"logging_keyevent\": 0}}');

      -- 增加 免费用户额度限制
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimit', '免费额度', '{\"ts\": 500, \"job\": 1000, \"datakit\": 5, \"tracing\": 1000000, \"logging_keyevent\": 1000000}');


      -- 原有的非免费版变更为 付费版
      update main_workspace set versionType="free", billingState="free" where status=0 and versionInfo ->> "$.version" = "free";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "BASIC";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "TEAM";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "ADVANCED";
      update main_workspace set versionType="unlimited", billingState="normal" where status=0 and versionInfo ->> "$.version" = "unlimited";


      -- 初始化 durationSet 数据
      -- 更新 rp
      update main_workspace set durationSet=JSON_OBJECT("rp", "1d") where `status` = 0 and rpName='rp0';
      update main_workspace set durationSet=JSON_OBJECT("rp", "7d") where `status` = 0 and rpName='rp1';
      update main_workspace set durationSet=JSON_OBJECT("rp", "30d") where `status` = 0 and rpName='rp2';
      update main_workspace set durationSet=JSON_OBJECT("rp", "90d") where `status` = 0 and rpName='rp3';
      update main_workspace set durationSet=JSON_OBJECT("rp", "90d") where `status` = 0 and rpName='rp_2160h';
      update main_workspace set durationSet=JSON_OBJECT("rp", "180d") where `status` = 0 and rpName='rp4';
      update main_workspace set durationSet=JSON_OBJECT("rp", "365d") where `status` = 0 and rpName='rp5';
      update main_workspace set durationSet=JSON_OBJECT("rp", "1095d") where `status` = 0 and rpName='rp6';

      -- 更新 logging 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "1d") where `status` = 0 and esRP ->> "$.logging" ="es_rp0";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "7d") where `status` = 0 and esRP ->> "$.logging" ="es_rp1";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "14d") where `status` = 0 and esRP ->> "$.logging" ="es_rp2";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "30d") where `status` = 0 and esRP ->> "$.logging" ="es_rp3";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "90d") where `status` = 0 and esRP ->> "$.logging" ="es_rp4";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "180d") where `status` = 0 and esRP ->> "$.logging" ="es_rp5";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "365d") where `status` = 0 and esRP ->> "$.logging" ="es_rp6";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "1095d") where `status` = 0 and esRP ->> "$.logging" ="es_rp7";

      -- 更新 keyevent 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "1d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp0";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "7d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp1";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "14d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp2";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "30d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp3";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "90d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp4";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "180d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp5";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "365d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp6";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "1095d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp7";

     
      -- 更新 tracing 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.tracing", "7d") where `status` = 0;

      -- 对象分类配置中的 tags/fields 需要清空
      update biz_object_class_cfg set tags='[]', fields='[]', extend='{}';

  # 12.10 迭代
  - seq: 20

    database: |-
      -- 创建 RUM配置表
      CREATE TABLE `biz_rum_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 rum- 前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `jsonContent` json NOT NULL COMMENT '额外拓展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 工作空间新增cliToken 字段
      ALTER TABLE `main_workspace` ADD COLUMN `cliToken` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '命令行Token验证' AFTER `token`;
      -- 集成表新增字段用来控制集成的展示与隐藏
      ALTER TABLE `biz_integration` ADD COLUMN `isHidden` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否隐藏，默认隐藏' AFTER `metaHash`;
      -- 图表新增queries 字段
      ALTER TABLE `biz_chart` ADD COLUMN `queries` json NULL COMMENT '查询信息' AFTER `type`;

      -- 清理部分已删除的工作空间数据
      UPDATE biz_dashboard set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart_group set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_query set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart set `status`=3 WHERE chartGroupUUID in (select uuid from biz_chart_group WHERE `status`=3) and `status` != 3;
      UPDATE biz_query set `status`=3 WHERE chartUUID in (select uuid from biz_chart WHERE `status`=3) and `status` != 3;

      -- 更新 main_config 标中 账单计费价格信息
      UPDATE `main_config` SET `value` = '{\"equation\": {\"ts\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"job\": \"math.ceil((count - discountQuantity)/priceQuantity)*price if count > discountQuantity else 0\", \"rum\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"tracing\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"logging_keyevent\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\"}, \"priceSet\": {\"ts\": {\"14d\": {\"price\": 1, \"priceQuantity\": 100}, \"30d\": {\"price\": 1.2, \"priceQuantity\": 100}, \"180d\": {\"price\": 1.8, \"priceQuantity\": 100}}, \"job\": {\"price\": 0.04, \"priceQuantity\": 1000}, \"rum\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"tracing\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"logging_keyevent\": {\"14d\": {\"price\": 0.35, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 0.65, \"priceQuantity\": 1000000}, \"180d\": {\"price\": 1.2, \"priceQuantity\": 1000000}}}, \"discountQuantitySet\": {\"ts\": 0, \"job\": 1000, \"rum\": 0, \"datakit\": 0, \"tracing\": 0, \"logging_keyevent\": 0}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 初始化各个工作空间的 rum rp 数据
      update main_workspace set durationSet=JSON_SET(durationSet, "$.rum", "7d") where `status` = 0;

  # 12.22 迭代
  - seq: 21

    database: |-
      -- 创建 datakit online 信息表
      CREATE TABLE `main_datakit_online` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 dkol-',
        `name` varchar(128) DEFAULT '' COMMENT 'datakit name',
        `hostName` varchar(128) DEFAULT NULL COMMENT 'host name',
        `ip` varchar(24) DEFAULT NULL COMMENT 'ip 地址',
        `token` varchar(64) NOT NULL COMMENT '采集数据token',
        `dkUUID` varchar(48) NOT NULL COMMENT 'datakit uuid',
        `version` varchar(48) DEFAULT '' COMMENT 'datakit version',
        `os` varchar(48) DEFAULT '' COMMENT 'os',
        `arch` varchar(48) DEFAULT '' COMMENT 'arch',
        `inputInfo` json DEFAULT NULL COMMENT 'input 相关信息',
        `lastOnline` int(11) DEFAULT NULL COMMENT '最后一次online时间',
        `lastHeartbeat` int(11) DEFAULT NULL COMMENT '最后一次心跳时间',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `k_dkuuid` (`dkUUID`) USING BTREE
      ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4;

  # 12.29 迭代
  - seq: 22

    database: |-
      -- 视图表新增绑定类型
      ALTER TABLE `biz_dashboard` ADD COLUMN `ownerType` enum('node','inner','object_class','workspace','account','') CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' AFTER `type`;

      -- 在视图上添加 image 字段用于存储 base64image
      ALTER TABLE `biz_dashboard` ADD COLUMN `image` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '视图的缩略图' AFTER `name`;

      -- 在视图变量中添加排序字段 seq
      ALTER TABLE `biz_variable` ADD COLUMN `seq` int(4) NOT NULL DEFAULT 0 COMMENT '变量排序' AFTER `dashboardUUID`;

      -- 以上更新表
      -- 以下更新数据

      -- 更新视图拥有者的类型-对象分类配置视图
      UPDATE biz_dashboard set ownerType='inner' WHERE status=0 and uuid in (select dashboardUUID from biz_object_class_cfg WHERE status=0 and dashboardUUID <>"");
      -- 更新节点视图的拥有者类型
      UPDATE biz_dashboard set ownerType='node' WHERE status=0 and uuid in (select dashboardUUID from biz_node WHERE status=0 and dashboardUUID <>"");
      UPDATE biz_dashboard set ownerType='node' WHERE status=0 and uuid in (select subDashboardUUID from biz_node WHERE status=0 and subDashboardUUID <>"");


      -- 更新视图拥有者-工作空间视图
      UPDATE biz_dashboard set ownerType='workspace' WHERE status=0 and uuid in (select dashboardUUID from main_workspace WHERE status=0 and dashboardUUID <>"");

      -- 更新视图拥有者-账号视图
      UPDATE biz_dashboard set ownerType='account' WHERE status=0 and uuid in (select dashboardUUID from main_account_workspace WHERE status=0 and dashboardUUID <>"");

      -- 历史数据中的 __tags/.keyword 替换为空
      -- 更新【图表】中的 __tags/.keyword 涉及 queries/extend
      update biz_chart set queries=REPLACE(REPLACE(queries, ".keyword", ""), "__tags.", "") where (queries like "%__tags.%" or queries like "%.keyword%");
      update biz_chart set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like "%__tags.%" or extend like "%.keyword%");

      -- 更新【触发规则】中的 __tags/.keyword 涉及 jsonScript/extend 字段
      update biz_rule set jsonScript=REPLACE(REPLACE(jsonScript, ".keyword", ""), "__tags.", "") where (jsonScript like '%__tags.%' or jsonScript like '%.keyword%');
      update biz_rule set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like '%__tags.%' or extend like '%.keyword%');

      -- 更新【视图】中的 __tags./.keyword  涉及 extend 字段
      update biz_dashboard set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like '%__tags.%' or extend like '%.keyword%');

      -- 更新【集成包】中的 __tags./.keyword  涉及 meta 字段
      update biz_integration set meta=REPLACE(REPLACE(meta, ".keyword", ""), "__tags.", "") where (meta like '%__tags.%' or meta like '%.keyword%');





  # 2021.01.14 迭代
  - seq: 23

    database: |-
      -- 新建视图绑定关系表
      CREATE TABLE `biz_dashboard_binding_relationship` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `targetType` varchar(48) NOT NULL COMMENT '目标类型',
        `targetUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `dashboardUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        PRIMARY KEY (`id`),
        KEY `k_dash_rel_uuid` (`workspaceUUID`,`targetType`,`targetUUID`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 解除工作空间 无效字段`bindInfo`的必填限制
      ALTER TABLE `main_workspace` MODIFY COLUMN `bindInfo` json NULL COMMENT '绑定到当前工作空间的信息' AFTER `versionInfo`;

      -- 视图变量新增 是否隐藏字段
      ALTER TABLE `biz_variable` ADD COLUMN `hide` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否隐藏' AFTER `content`;


      -- 以上更新表
      -- 以下更新数据

      -- 变更RUM的类型字段值 将微信小程序 wechat_applet 变更为 miniapp
      update biz_rum_cfg set jsonContent=JSON_SET(jsonContent, "$.type", "miniapp") where jsonContent ->> "$.type" ="wechat_applet";

      -- 更新【视图】中的字段 Key1 => Key2   涉及 extend 字段
      update biz_dashboard set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<> "KEYEVENT" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


      -- 更新【图表】中的字段  Key1 => Key2 涉及 queries/extend
      update biz_chart set queries=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(queries, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<>"alarm" and  status<>3 and queries not like "%keyevent%" and (queries like "%\__status%"  or queries like "%\__source%"  or queries like "%\__serviceName%"  or queries like "%\__parentID%"  or queries like "%\__operationName%"  or queries like "%\__spanID%"  or queries like "%\__traceID%"  or queries like "%\__spanType%"  or queries like "%\__endpoint%"  or queries like "%\__content%"  or queries like "%\__duration%"  or queries like "%\__isError%"  or queries like "%\__name%"  or queries like "%\__class%"  or queries like "%\__timestampMs%" ) ;

      update biz_chart set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<>"alarm" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


      -- 更新【触发规则】中的字段 Key1 => Key2 涉及 jsonScript/extend 字段
      update biz_rule set jsonScript=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(jsonScript, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where jsonScript ->> "$.type" <> "keyeventCheck" and  status<>3 and jsonScript not like "%keyevent%" and (jsonScript like "%\__status%"  or jsonScript like "%\__source%"  or jsonScript like "%\__serviceName%"  or jsonScript like "%\__parentID%"  or jsonScript like "%\__operationName%"  or jsonScript like "%\__spanID%"  or jsonScript like "%\__traceID%"  or jsonScript like "%\__spanType%"  or jsonScript like "%\__endpoint%"  or jsonScript like "%\__content%"  or jsonScript like "%\__duration%"  or jsonScript like "%\__isError%"  or jsonScript like "%\__name%"  or jsonScript like "%\__class%"  or jsonScript like "%\__timestampMs%" ) ;

      update biz_rule set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where jsonScript ->> "$.type" <> "keyeventCheck" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


  # 2021.02.02 迭代
  - seq: 24
    config:
      core: |-
        kodo:
          # 在installCmd/upgradeCmd 命令原有的基础上插入 `DW_KODO_WS=wss://kodo.dataflux.cn`
          installCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_KODO_WS=wss://kodo.dataflux.cn  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} bash -c "$(curl http://zhuyun-static-files-testing.oss-cn-hangzhou.aliyuncs.com/dataway/install.sh)"'
          upgradeCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_KODO_WS=wss://kodo.dataflux.cn DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_UPGRADE=1  bash -c "$(curl http://zhuyun-static-files-testing.oss-cn-hangzhou.aliyuncs.com/dataway/install.sh)"'


    database: |-
      -- 新建监视器表
      CREATE TABLE `biz_monitor` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, monitor-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `type` enum('custom','inner') NOT NULL DEFAULT 'custom',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '规则分组名字',
        `config` json DEFAULT NULL COMMENT '其他设置',
        `alertOpt` json DEFAULT NULL COMMENT '触发操作设置',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 规则表新增【监视器UUID】字段
      ALTER TABLE `biz_rule` ADD COLUMN `monitorUUID` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '监视器UUID' AFTER `kapaUUID`;

      -- 废弃并清理 image 字段（执行此操作前需要先清理 image 字段的数据）
      -- 清理图表中的 image 字段数据
      update biz_dashboard set image="";
      ALTER TABLE `biz_dashboard` MODIFY COLUMN `image` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '视图的缩略图-废弃' AFTER `name`;


      -- 以上更新表
      -- 以下更新数据

      -- 删除旧的触发规则
      DELETE FROM biz_rule where type='baseline';
      update biz_rule set status=3 where type='aggs' and status=0;
      update biz_rule set status=2 where type='trigger' and status=0;


  # 2021.03.02 迭代
  - seq: 25
    database: |-
      -- 新建通知对象
      CREATE TABLE `biz_notify_object` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, monitor-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '通知对象名称',
        `type` enum('dingTalkRobot','HTTPRequest') NOT NULL DEFAULT 'dingTalkRobot',
        `optSet` json DEFAULT NULL COMMENT '操作设置',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      CREATE TABLE `main_key_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID,带keycf-',
        `workspaceUUID` varchar(48) NOT NULL COMMENT '工作空间uuid',
        `keyCode` varchar(48) NOT NULL COMMENT '配置项唯一Code',
        `description` text NOT NULL COMMENT '描述信息',
        `value` json NOT NULL COMMENT '配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 提出场景无效字段的空值设置
      ALTER TABLE `biz_scene`
      MODIFY COLUMN `measurementLimit` json NULL COMMENT '指标集限制' AFTER `describe`,
      MODIFY COLUMN `filter` json NULL COMMENT '过滤条件' AFTER `measurementLimit`;

      ALTER TABLE `biz_node`
      MODIFY COLUMN `measurementLimit` json NULL COMMENT '指标集限制' AFTER `iconSet`,
      MODIFY COLUMN `isInheritance` tinyint(1) NULL DEFAULT 1 COMMENT '是否继承' AFTER `filter`,
      MODIFY COLUMN `subTagKeys` json NULL COMMENT '子节点 tag 键值' AFTER `subTagKeyMeasurements`,
      MODIFY COLUMN `bindTagValues` json NULL COMMENT '绑定虚拟节点值' AFTER `subTagKeys`,
      MODIFY COLUMN `subIsInheritance` tinyint(1) NULL DEFAULT 1 COMMENT '子节点是否继承父节点过滤条件' AFTER `subIconSet`,
      MODIFY COLUMN `bindInfo` json NULL COMMENT '节点绑定信息' AFTER `subIsInheritance`;


  # 2021.03.25 迭代
  - seq: 26
    database: |-

      -- 新增告警配置表， 当前仅限于 主机静默的配置字段
      CREATE TABLE `biz_mute` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID mute- 前缀',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `tags` json DEFAULT NULL COMMENT '目标的tags',
        `start` int(11) NOT NULL DEFAULT '-1',
        `end` int(11) NOT NULL DEFAULT '-1',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 通知对象新增 wechatRobot 类型
      ALTER TABLE `biz_notify_object`
      MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'dingTalkRobot' AFTER `name`;

      -- 删除原视图绑定关系表中的数据
      delete from biz_dashboard_binding_relationship;
      -- 调整原视图绑定关系表字段
      ALTER TABLE `biz_dashboard_binding_relationship`
      CHANGE COLUMN `dashboardUUID` `extend` json NOT NULL COMMENT '额外数据' AFTER `targetUUID`,
      ADD COLUMN `sourceType` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '源类型' AFTER `workspaceUUID`,
      ADD COLUMN `sourceUUID` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '源标记ID' AFTER `sourceType`,
      MODIFY COLUMN `targetType` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '目标类型' AFTER `sourceUUID`,
      DROP INDEX `k_dash_rel_uuid`,
      ADD INDEX `k_wksp_uuid`(`workspaceUUID`) USING BTREE,
      ADD INDEX `k_source_uuid`(`sourceUUID`) USING BTREE,
      ADD INDEX `k_target_uuid`(`targetUUID`) USING BTREE;

      -- 变更原视图绑定关系表的表名
      alter table biz_dashboard_binding_relationship rename AS biz_entity_relationship;
      -- 规则表新增类型`cloud_correlation_switch`
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs','cloud_correlation_switch') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 变更 main_key_config 表
      alter  table main_key_config modify value  TEXT NOT NULL COMMENT '配置数据';


  # 2021.04.07 迭代
  - seq: 27
    database: |-

      -- 视图新增mapping字段
      ALTER TABLE `biz_dashboard`
      ADD COLUMN `mapping` json NOT NULL COMMENT '视图变量的mapping' AFTER `extend`;

      -- 同步更新历史数据
      update biz_dashboard set mapping="[]" WHERE status != 3;

  # 2021.04.14 迭代
  - seq: 28
    config:
      core: |-
        # CloudCare 系统配置
        # 部署版本暂时不使用此配置，可以不作修改
        CloudCareServer:
          use_https: true
          port: 443
          host: "www.cloudflux.cn"
          ak_id: ""
          ak_secret: ""
          timeout: 30

        # 云拨测服务
        DialingServer:
          # 拨测服务中心的地址配置
          # 此处不需要修改
          use_https: true
          host: dflux-dial.dataflux.cn
          port: 443
          timeout: 10

          # 此处需要向产品侧索取拨测服务的 AK
          # 每个部署版本一组 AK 信息
          ak_id: ""
          ak_secret: ""
          
          # 每个部署的版本有不同的 DataWay 地址
          # 用于将拨测数据打入到相应部署版本工作空间内
          # 只要修改 host，保留原样的 ?token={} 参数，格式不要修改
          open_dataway_url: "http://openway.cloudcare.cn?token={}"

    database: |-

      -- 云拨测任务
      CREATE TABLE `biz_dialing_tasks` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, dial-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `type` enum('http','tcp','dns') NOT NULL DEFAULT 'http',
        `regions` json NOT NULL,
        `task` json NOT NULL COMMENT '任务数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 通知对象新增邮件组
      ALTER TABLE `biz_notify_object`
      MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot','mailGroup') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'dingTalkRobot' AFTER `name`;

      -- 调整监视器类型
      ALTER TABLE `biz_monitor`
      MODIFY COLUMN `type` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'custom' AFTER `workspaceUUID`;

      -- 插入 限制信息
      INSERT INTO `df_core`.`main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 500, \"job\": 5000, \"logs\": 2000000}');

      -- 更新计费配置
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';


  # 2021.05.07 迭代
  - seq: 29
    database: |-

      -- 新增 日志备份的规则类型
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs','cloud_correlation_switch','logbackup') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 更新 security 的 rp, 默认180d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.security", "180d") where `status` = 0;
      -- 更新 backup_log 的 rp, 默认 180d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.backup_log", "180d") where `status` = 0;

      -- 更新账单计费规则, 新增了 备份日志的账单规则
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 批量更新数据保留时长，将365d变更为360d; 无需刷新influx 和ES
      update main_workspace set durationSet=REPLACE(durationSet, "365d", "360d") where `status`=0;

      -- 插入价格计费信息
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}');


  # 2021.05.20 迭代
  - seq: 30
    database: |-

      -- 新增 查询快照
      CREATE TABLE `biz_snapshots` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，前缀snapshot',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间唯一UUID',
        `accountUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '账号Uuid',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '快照名称',
        `type` enum('logging','keyevent','tracing','object','dialing_task','security','rum') NOT NULL DEFAULT 'logging' COMMENT '快照类型',
        `content` json NOT NULL COMMENT '用户自定义配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `acnt_wksp_fk` (`workspaceUUID`,`accountUUID`) USING BTREE
      ) ENGINE=InnoDB AUTO_INCREMENT=149 DEFAULT CHARSET=utf8mb4;

      -- 创建全球区域表
      CREATE TABLE `biz_geo` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `country` varchar(128) NOT NULL DEFAULT '' COMMENT '国家',
        `province` varchar(128) NOT NULL DEFAULT '' COMMENT '省份',
        `city` varchar(128) NOT NULL DEFAULT '' COMMENT '城市',
        PRIMARY KEY (`id`),
        KEY `k_country` (`country`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 2021.06.03 迭代
  - seq: 31
    database: |-

      -- 新增 账号设备表，用于记录用户移动端登录过的设备信息
      CREATE TABLE `biz_account_device` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `accountId` varchar(64) NOT NULL DEFAULT '' COMMENT 'account id',
        `deviceId` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备ID',
        `deviceVersion` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备版本',
        `deviceOS` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备系统',
        `deviceOSVersion` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备系统系统版本',
        `registrationId` varchar(48) NOT NULL DEFAULT '' COMMENT '推送系统内的ID',
        `loginTime` int(11) NOT NULL DEFAULT '-1' COMMENT '登录时间',
        `heartBeat` int(11) NOT NULL DEFAULT '-1' COMMENT '最后心跳时间',
        `inUse` int(1) NOT NULL DEFAULT '0' COMMENT '使用状态',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`) COMMENT 'sk 可以存在相同的情况',
        KEY `uk_acnt` (`accountId`) USING BTREE COMMENT '全局唯一',
        KEY `uk_device` (`deviceId`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增登录历史记录
      CREATE TABLE `biz_account_login_history` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT 'login-前缀',
        `accountUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '账号Uuid',
        `platform` varchar(48) NOT NULL DEFAULT '' COMMENT '登录平台',
        `loginTime` int(11) NOT NULL DEFAULT '-1' COMMENT '记录登录时间',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `accountUUID_fk` (`accountUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增 kodo上报使用量给cc的请求历史表
      CREATE TABLE `biz_post_cc_history` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `date` varchar(256) NOT NULL DEFAULT '' COMMENT '上传日期',
        `detail` json DEFAULT NULL COMMENT '上传详情',
        `status` varchar(48) NOT NULL DEFAULT 'success' COMMENT '上传状态',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        PRIMARY KEY (`id`) COMMENT '主键'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 云拨测任务新增`headless`类型
      ALTER TABLE `biz_dialing_tasks`
      MODIFY COLUMN `type` enum('http','tcp','dns','browser') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'http' AFTER `workspaceUUID`;

      -- 历史日志生成指标规则补全 interval 字段
      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 60) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "1m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 300) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "5m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 900) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "15m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 1800) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "30m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 3600) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "1h";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 43200) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "12h";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 86400) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "24h";


      -- 更新计费价格公式
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"int(math.ceil((ts_count)/500)+count ) if (ts_count / (count or 1)) > 500 else count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"(count + keyevent_count + security_count - datakit_count * 1000000) if count + keyevent_count + security_count > datakit_count * 1000000 else 0\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 更新使用量限制信息
      UPDATE `main_config` SET `description` = '免费额度', `value` = '{\"ts\": 500, \"job\": 5000, \"rum\": 100, \"logs\": 2000000, \"trace\": 10000}' WHERE `keyCode` = 'FreeLimitV2';


  # 2021.06.17 迭代
  - seq: 32
    database: |-

      -- 新增 指标类型快照
      ALTER TABLE biz_snapshots MODIFY COLUMN `type` enum('logging','keyevent','tracing','object','dialing_task','security','rum','measurement') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'logging' NOT NULL COMMENT '快照类型';

      -- 视图表新增 `iconSet` 字段用于记录视图的图表信息
      ALTER TABLE `biz_dashboard`
      ADD COLUMN `iconSet` json NOT NULL COMMENT '视图缩略图信息' AFTER `image`;

      -- 调整分享配置表
      ALTER TABLE `biz_share_config`
      DROP COLUMN `shareCode`,
      ADD COLUMN `content` json NOT NULL COMMENT '分享对象的快照内容' AFTER `meta`,
      DROP INDEX `k_share_code`;

      -- 新加了biz_data_blacklist_rule表
      CREATE TABLE `biz_data_blacklist_rule` (
      	`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      	`uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, bkrul-',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
      	`type` enum('logging') NOT NULL DEFAULT 'logging' COMMENT '数据源类型',
      	`source` varchar(64) NOT NULL DEFAULT '' COMMENT '数据来源',
      	`filters` json NOT NULL COMMENT '过滤条件列表',
      	`conditions` text NOT NULL COMMENT 'dql格式的过滤条件',
      	`status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
      	`creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      	`updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      	`createAt` int(11) NOT NULL DEFAULT '-1',
      	`deleteAt` int(11) NOT NULL DEFAULT '-1',
      	`updateAt` int(11) NOT NULL DEFAULT '-1',
      	PRIMARY KEY (`id`),
      	UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      	KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 新加了biz_email表
      CREATE TABLE `biz_email` (
      	`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      	`uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, 前缀是email_',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
      	`type` enum('almost','already') NOT NULL DEFAULT 'almost' COMMENT '邮件类型',
      	`temName` varchar(64) NOT NULL DEFAULT '' COMMENT '邮件模版名',
      	`info` json NOT NULL COMMENT '邮件参数',
      	`content` text NOT NULL COMMENT '邮件内容',
      	`status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
      	`creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      	`updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      	`createAt` int(11) NOT NULL DEFAULT '-1',
      	`deleteAt` int(11) NOT NULL DEFAULT '-1',
      	`updateAt` int(11) NOT NULL DEFAULT '-1',
      	PRIMARY KEY (`id`),
      	UNIQUE KEY `email_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      	KEY `e_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 注意，此处需要先删除分享数据之后，才能更新`AUTO_INCREMENT`
      DELETE FROM biz_share_config;
      -- 重设 AUTO_INCREMENT
      ALTER TABLE `biz_share_config` AUTO_INCREMENT = 0;

      -- 初始化现有视图的`iconSet`字段数据
      update biz_dashboard set iconSet='{}' WHERE `status`=0;

      -- 清理场景已删除，但内部节点未删除的数据1
      UPDATE biz_node set status=3 where status=0 and sceneUUID in (select uuid from biz_scene where `status`=3);
      -- 清理节点已删除，但是关联视图未删除的数据2
      UPDATE biz_dashboard set status=3 WHERE status=0 and uuid in (SELECT dashboardUUID as uuid from biz_node WHERE status=3);
      -- 清理视图已删除，但关联的视图变量未删除的数据3
      UPDATE biz_variable set status=3 WHERE status=0 and dashboardUUID in (SELECT uuid from biz_dashboard WHERE status=3);
      -- 清理视图已删除，但关联的图表未删除的数据4
      UPDATE biz_chart set status=3 WHERE status=0 and dashboardUUID in (SELECT uuid from biz_dashboard WHERE status=3);

      -- 插入免费版工作空间使用量统计配置
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeMeteringUnitConfig', '免费版工作空间使用量统计计算配置; priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count + keyevent_count + security_count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 免费额度限制配置
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 500, \"job\": 5000, \"rum\": 100, \"logs\": 2000000, \"trace\": 10000}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 付费版工作空间使用量和计费统计公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"int(math.ceil((ts_count)/500)+count ) if (ts_count / (count or 1)) > 500 else count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"(count + keyevent_count + security_count - datakit_count * 1000000) if count + keyevent_count + security_count > datakit_count * 1000000 else 0\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

