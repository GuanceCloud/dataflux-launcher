upgrade:
  - seq: 1
    database: |-
      -- cq 2020/0212
      CREATE TABLE `main_influx_cq` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ifcq-',
        `influxUUID` varchar(48) NOT NULL DEFAULT '',
        `cqName` varchar(128) NOT NULL DEFAULT 'cq_' COMMENT 'CQ name',
        `namePrefix` varchar(48) NOT NULL DEFAULT '',
        `sampleEvery` varchar(48) NOT NULL DEFAULT '30m' COMMENT 'RESAMPLE every XXX',
        `sampleFor` varchar(48) NOT NULL DEFAULT '1h' COMMENT 'RESAMPLE for XXX',
        `db` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB 名称',
        `rp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则只用 @db 的默认 RP',
        `cqrp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则用 CQ 默认的 RP, 比如 rpcq',
        `measurement` varchar(48) NOT NULL DEFAULT '' COMMENT '指标名',
        `cqMeasName` varchar(128) NOT NULL DEFAULT '' COMMENT 'cq 后的指标名，，不指定则  @name',
        `keepTags` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否在 CQ 的 measurement 上保 原始 tag， 然原始 tag 会被转换成 field',
        `groupByTime` varchar(48) NOT NULL DEFAULT '30m',
        `groupByOffset` varchar(48) NOT NULL DEFAULT '15m',
        `funcFields` json NOT NULL COMMENT '["""mean("field-1") AS "field-1-mean"""",...]',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 2/18
      ALTER TABLE main_influx_db ADD COLUMN cqrp VARCHAR(48) NOT NULL AFTER influxRpName;
      UPDATE main_influx_db set cqrp='autogen';

      ALTER TABLE main_kapa DROP FOREIGN KEY kapa_is_uuid;

      -- 场景新增 指标集数据集过滤条件
      ALTER TABLE `biz_scene` 
      ADD COLUMN `measurementLimit` json NOT NULL COMMENT '指标集限制' AFTER `describe`,
      ADD COLUMN `filter` json NOT NULL COMMENT '过滤条件' AFTER `measurementLimit`;

      -- 设置场景历史数据中的 数据范围
      UPDATE biz_scene set filter='[]', measurementLimit='[]' where status=0;

      -- 节点新增 icon 地址配置
      ALTER TABLE `biz_node` 
      ADD COLUMN `iconSet` json NULL COMMENT '图标设置' AFTER `name`;

      -- 同时初始化历史数据
      UPDATE biz_node set iconSet='{}';

      -- 修复生产环境中 已删除场景的分享设置
      UPDATE biz_share_config set status=3 WHERE status=0 and resourceUUID in (select DISTINCT(uuid) from biz_scene WHERE status=3);

  - seq: 2
    database: |-
      -- 管理员添加权限
      ALTER TABLE main_manage_account ADD COLUMN role VARCHAR(10) NOT NULL COMMENT "角色  admin: 管理员/ dev: 开发者" AFTER name;
      -- 数据处理
      update main_manage_account set role="admin" where role = "";

  - seq: 3
    database: |-
      -- 新增 视图变量排序字段
      ALTER TABLE `biz_variable` ADD COLUMN `valueSort` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT '视图变量的值排序' AFTER `definition`;

      -- 修复创建工作空间未指定成员时默认添加了 空字符串UUID的成员导致的垃圾数据, 修复方式：直接设置删除状态
      UPDATE main_account_workspace set `status`=3 WHERE (accountUUID="" or (accountUUID not REGEXP 'acnt[-_]')) and `status`!= 3;
      UPDATE main_account_privilege set `status`=3 WHERE (accountUUID="" or (accountUUID not REGEXP 'acnt[-_]')) and `status`!= 3;

      -- query 增加枚举类型
      ALTER TABLE `biz_query` MODIFY COLUMN `qtype` enum('HTTP','TSQL','SQL','CUSTOM_FUNC') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '查询类型' AFTER `query`;

  - seq: 4
    database: |-
      -- 增加内置 DataWay
      INSERT INTO `main_agent` (`uuid`, `name`, `version`, `host`, `port`, `domainName`, `workspaceUUID`, `status`, `creator`, `updator`, `createAt`, `uploadAt`, `deleteAt`, `updateAt`)
      VALUES ('agnt_internal_dataway_1', '内置 DataWay', '0.1-349-gfff24b0', '', 0, '', 'wksp_system', 0, '', '', UNIX_TIMESTAMP(), UNIX_TIMESTAMP(), -1, UNIX_TIMESTAMP());

  # 3.16 迭代
  - seq: 5
    database: |-
      -- 节点新增 是否打开继承开关字段，默认打开
      ALTER TABLE `biz_node` ADD COLUMN `isInheritance` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否继承' AFTER `filter`;

      -- 节点上新增2个字段，用来控制子节点的图标和继承信息
      ALTER TABLE `biz_node`
      ADD COLUMN `subIconSet` json NULL COMMENT '子节点的图标信息' AFTER `exclude`,
      ADD COLUMN `subIsInheritance` tinyint(1) NOT NULL DEFAULT 1 COMMENT '子节点是否继承父节点过滤条件' AFTER `subIconSet`;

      --  新增ck 黑名单表  03/16/2020
      CREATE TABLE `main_ck_blacklist` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ckbl-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB uuid',
        `measurement` varchar(48) NOT NULL DEFAULT '' COMMENT '指标名',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
    config:
      core: |-
        kodo:
          # 在原有的 命令中追加了 DW_VERSION
          upgradeCmd: 'DW_KODO=http://172.16.0.12:10556  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_VERSION={version} DW_UPGRADE=1  bash -c "$(curl http://cloudcare-kodo.oss-cn-hangzhou.aliyuncs.com/dataway/test/install.sh)"'

        clickhouse:
          # 新增 clickhouse 启用开关配置项，默认值 false，可以不配置
          open: false
  # 3.31 迭代
  - seq: 6
    database: |-
      # 新增 最大时间线设置
      ALTER TABLE `main_workspace` ADD COLUMN `maxTsCount` int(0) NOT NULL DEFAULT 100 COMMENT '最大时间线' AFTER `dataRestriction`;


      # 衍生节点缓存表
      CREATE TABLE `biz_decorate_node` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 node- 前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `sceneUUID` varchar(48) NOT NULL COMMENT '场景 uuid',
        `parentUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '父节点 uuid',
        `name` varchar(128) NOT NULL COMMENT '子节点名称',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `scene_node_fk` (`sceneUUID`),
        KEY `node_parent_uuid_fk` (`parentUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      # 新增工作空间License表
      CREATE TABLE `main_workspace_license` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT 'license lcn-',
        `workspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `instanceId` varchar(64) NOT NULL DEFAULT '' COMMENT 'LicenseId',
        `extend` json NOT NULL COMMENT '额外拓展字段',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: 正常/2: 禁用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`) COMMENT '主键',
        UNIQUE KEY `uk_instanceId` (`instanceId`) COMMENT 'license id 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      # 新增 加载标记
      ALTER TABLE `biz_node` ADD COLUMN `isLoading` tinyint(1) NULL AFTER `status`;

  # 4.09 迭代
  - seq: 7
    database: |-
      -- 触发规则 表新增 crontab
      ALTER TABLE `biz_rule`
      ADD COLUMN `crontabInfo` json NULL COMMENT 'crontab配置信息' AFTER `tickInfo`;

      ALTER TABLE `main_workspace_license` ADD COLUMN `version` varchar(48) NOT NULL  COMMENT 'license 版本' AFTER `instanceId`;
      ALTER TABLE `main_workspace_license` ADD COLUMN `expire` int(11) NOT NULL  COMMENT 'license 过期时间' AFTER `instanceId`;
      ALTER TABLE `main_workspace` ADD COLUMN `versionInfo` json  COMMENT '版本信息' AFTER `desc`;

      -- 新增 是否自动聚合
      ALTER TABLE `main_workspace` ADD COLUMN `autoAggregation` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '是否自动聚合' AFTER `status`;

      -- 新增 告警历史保留时长
      ALTER TABLE `main_workspace` ADD COLUMN `alarmHistoryPeriod` varchar(48) NOT NULL DEFAULT '' COMMENT '告警历史保留时长' AFTER `status`;

      ALTER TABLE `main_workspace` CHANGE `dataRestriction` `dataRestriction` JSON  NULL  COMMENT '数据权限';

      -- 特别说明: 此为 PAAS 版必须执行的，用来更新工作空间中的 时间线和RP等信息
      update main_workspace set alarmHistoryPeriod="rp2", maxTsCount=-1;

    config:
      core: |-
        # 静态文件域名
        staticResource:
          domain: "http://static.cloudcare.cn:10561"

  # 4.21 迭代
  - seq: 8
    database: |-
      -- 新增 db rp时长
      ALTER TABLE `main_workspace` ADD COLUMN `rpName` varchar(48) NOT NULL DEFAULT '' COMMENT 'db rp' AFTER `status`;

      -- 更新寄存rp db数据
      update main_workspace ws, main_influx_db db set ws.rpName = db.`influxRpName`  where ws.`dbUUID` = db.`uuid` and ws.`rpName` = "";

      -- 刷新 versionInfo字段数据 pass版对应 unlimited
      UPDATE main_workspace set versionInfo='{"rp": "rp5", "name": "无限版", "version": "unlimited", "ruleCount": -1, "maxTsCount": -1, "ruleActivePeriod": -1}';

      -- 节点新增 指标集字段
      ALTER TABLE `biz_node` ADD COLUMN `subTagKeyMeasurements` json NULL COMMENT '衍生节点标签指标集' AFTER `isInheritance`;
      -- 设置默认值
      UPDATE `biz_node` set subTagKeyMeasurements='[]';



  # 4.30 迭代
  - seq: 9
    database: |-
      -- 新增 是否开启数仓字段
      ALTER TABLE `main_workspace` ADD COLUMN `isOpenWarehouse` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否开启数据仓库' AFTER `dbUUID`;

      -- 新增 集成 fileName 用于排序
      ALTER TABLE `biz_integration` ADD COLUMN `fileName` varchar(128)  DEFAULT "" COMMENT '文件名 用于排序' AFTER `name`;

      -- 更新 main_ck_blacklist
      drop table main_ck_blacklist;

      -- 创建CK同步表
      CREATE TABLE `main_ck_datasync` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ckds-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '原始 Measurement 所在 DB uuid',
        `measurement` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '指标名',
        `tableName` varchar(128) NOT NULL DEFAULT '' COMMENT 'ck table name',
        `startTime` int(11) NOT NULL COMMENT '单位: 秒',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 更新 main_influx_cq
      drop table main_influx_cq;

      -- 重建 CQ表, 原表无数据
      CREATE TABLE `main_influx_cq` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ifcq-',
        `dbUUID` varchar(48) NOT NULL DEFAULT '',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `sampleEvery` varchar(48) NOT NULL DEFAULT '30m' COMMENT 'RESAMPLE every XXX',
        `sampleFor` varchar(48) NOT NULL DEFAULT '1h' COMMENT 'RESAMPLE for XXX',
        `measurement` varchar(256) NOT NULL DEFAULT '' COMMENT '指标名',
        `rp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则只用 @db 的默认 RP',
        `cqrp` varchar(48) NOT NULL DEFAULT '' COMMENT '不填则用 CQ 默认的 RP, 比如 rpcq',
        `aggrFunc` varchar(48) NOT NULL DEFAULT 'mean',
        `groupByTime` varchar(48) NOT NULL DEFAULT '30m',
        `groupByOffset` varchar(48) NOT NULL DEFAULT '15m',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 5.21 迭代
  - seq: 10
    database: |-
      -- 新增 清除数据时间
      ALTER TABLE `main_workspace_license` ADD COLUMN  `disableTime`  int(11) NULL DEFAULT 0 COMMENT '数据失效时间' AFTER `expire`;


  # 6.09 迭代
  - seq: 11
    config:
      core: |-
        # 此处配置的是 FT-CORE 默认的系统工作空间配置
        sysDatawaySet:
          defaultCfg:
            token: 此处是系统工作空间的token
            timeout: 3

        # ElasticsearchServer 服务器配置
        ElasticsearchServer:
          protocol: http
          host: ft-elasticsearch.middleware.svc.cluster.local
          port: 9200
          user: username
          password: xxxxxxxxxxx
          timeout: 30

    database: |-
      -- 新增 es 生命周期管理
      ALTER TABLE `main_workspace` ADD COLUMN  `esRP`  json NULL COMMENT 'es 生命周期管理' AFTER `autoAggregation`;

      -- 新增 日志提取表
      CREATE TABLE `main_log_extract_rule` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 taly-',
        `batchesID` varchar(48) NOT NULL COMMENT 'func批处理id',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `source` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '来源',
        `funcId` varchar(48) NOT NULL DEFAULT '' COMMENT '解析方法',
        `url` varchar(128) NOT NULL DEFAULT '' COMMENT 'url',
        `funcKwargsJSON` json NOT NULL COMMENT 'func函数所需参数',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_batchesID` (`batchesID`) COMMENT 'batchesID  做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 6.30 迭代
  - seq: 12
    config:
      core: |-
        # kodo 配置中的 upgradeCmd配置项中，减少 `DW_VERSION={version}`项
        kodo:
          upgradeCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_UPGRADE=1  bash -c "$(curl https://static.dataflux.cn/dataway/install.sh)"'

    database: |-
      -- 新增apm配置表
      CREATE TABLE `main_apm_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 apmc-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `service` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '服务名',
        `config` json NOT NULL COMMENT 'apm配置参数',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `k_ws_uuid` (`workspaceUUID`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 删除 main_agent 表的 workspace_uuid 索引, 并添加url字段
      ALTER TABLE `main_agent`
      ADD COLUMN `url` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '完整地址' AFTER `version`;


  # 7.16 迭代
  - seq: 13
    config:
      core: |-
        # 默认系统工作空间设置
        SystemWorkspaceSet:
          uuid: wksp_system

    database: |-
      -- 为规则类型`type`新增一个类型值`aggs`
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 为视图添加额外拓展字段
      ALTER TABLE `biz_dashboard` ADD COLUMN `extend` json NULL COMMENT '额外拓展字段' AFTER `type`;
      -- 刷视图数据
      UPDATE biz_dashboard set extend='{}' WHERE `status`=0

  # 8.4 迭代
  - seq: 14
    config:
      core: |-
        # 工单系统配置
        TicketServer:
          use_https: true
          port: 443
          host: "ticket-api.cloudcare.cn"
          ak_id: "dataflux-core" # 本系统在工单系统中的名字
          ak_secret: "xxxxxx"   # 本系统在工单系统中对应的安全密匙
          timeout: 30

  # 8.20 迭代
  - seq: 15
    database: |-
      -- 场景新增好图标字段, 并默认初始化为 空字典
      ALTER TABLE `biz_scene` ADD COLUMN `iconSet` json COMMENT '图标设置' AFTER `workspaceUUID`;
      UPDATE biz_scene SET iconSet='{}';

  # 9.08 迭代
  - seq: 16
    database: |-
      -- 新增 对象分类配置表
      CREATE TABLE `biz_object_class_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 objc-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '对象分类名',
        `alias` varchar(128) NOT NULL DEFAULT '' COMMENT '对象分类别名',
        `publicSet` json NOT NULL COMMENT '对象分类列表的公共和默认设置',
        `colSets` json NOT NULL COMMENT '对象分类列表的字段设置列表',
        `extend` json DEFAULT NULL COMMENT '额外拓展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

  # 9.17 迭代
  - seq: 17
    database: |-
      -- 新增 对象分类配置表
      ALTER TABLE `biz_object_class_cfg`
      ADD COLUMN `dashboardUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '视图UUID' AFTER `workspaceUUID`;

      -- 删除掉 原来的模版表
      DROP TABLE IF EXISTS `biz_template`;

      -- 创建系统模版表, 存储各类配置信息
      CREATE TABLE `biz_sys_template` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID systpl-',
        `owner` varchar(48) NOT NULL DEFAULT '' COMMENT '所属目标类型',
        `code` varchar(48) NOT NULL DEFAULT '' COMMENT '命名',
        `note` text NOT NULL COMMENT '备注说明',
        `content` json NOT NULL COMMENT '模版内容',
        `extend` json DEFAULT NULL COMMENT '额外扩展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `template_owner_fk` (`owner`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 历史数据迁移更新
      UPDATE biz_variable set datasource='ftinfluxdb' WHERE datasource='ftinflxdb' and status=0 and datasource !="";
      UPDATE biz_variable set datasource='custom' WHERE type='CUSTOM_LIST' and status=0;
      ALTER TABLE `biz_variable` MODIFY COLUMN `type` enum('QUERY','CUSTOM_LIST','ALIYUN_INSTANCE','TAG','FIELD') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '类型' AFTER `code`;


  # 10.15 迭代
  - seq: 18
    database: |-
      -- 创建系统配置表 用来存储可变动的配置
      DROP TABLE IF EXISTS `main_config`;
      CREATE TABLE `main_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `keyCode` varchar(48) NOT NULL COMMENT '配置项唯一Code',
        `description` text NOT NULL COMMENT '描述信息',
        `value` json NOT NULL COMMENT '配置数据',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`keyCode`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 对象分类配置表新增 tags/fields
      ALTER TABLE `biz_object_class_cfg`
      ADD COLUMN `tags` json NULL COMMENT '当前分类的 tags列表' AFTER `colSets`,
      ADD COLUMN `fields` json NULL COMMENT '当前分类的fields列表' AFTER `tags`,
      ADD COLUMN `retentionPeriod` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '闲置时间-超过此时间之后会删除对象' AFTER `alias`;

      -- 为历史数据设置 tags/fields 的默认值
      UPDATE biz_object_class_cfg set tags='[]' ,fields='[]';

      -- 插入默认的内置对象分类列表
      INSERT INTO `main_config`(`id`, `keyCode`, `description`, `value`) VALUES (1, 'BuiltInObjectClass', '内置对象分类列表', '[\"Servers\"]');


  # 11.19 迭代
  - seq: 19
    config:
      core: |-
        # 工单系统配置
        billingServerSet:
          isOpen: true

    database: |-

      -- 新增的 对象关系图表
      CREATE TABLE `biz_object_relation_graph` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 objrg-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `jsonContent` json NOT NULL COMMENT '关系数据JSON内容',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 工作空间表新增 账单状态字段，
      ALTER TABLE `main_workspace`
      ADD COLUMN `durationSet` json NULL COMMENT '数据保留时长设置' AFTER `enablePublicDataway`,
      ADD COLUMN `versionType` enum('free','pay','unlimited') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'free' COMMENT 'free表示体验版，pay表示付费版' AFTER `durationSet`,
      ADD COLUMN `billingState` enum('free','unlimited','normal','arrearage','expired') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'free' COMMENT '帐户费用状态' AFTER `versionType`;

      -- 新增账单计费配置信息
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', '计量单价配置  priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式', '{\"equation\": {\"ts\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"job\": \"math.ceil((count - discountQuantity)/priceQuantity)*price if count > discountQuantity else 0\", \"tracing\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"logging_keyevent\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\"}, \"priceSet\": {\"ts\": {\"14d\": {\"price\": 1, \"priceQuantity\": 100}, \"30d\": {\"price\": 1.2, \"priceQuantity\": 100}, \"180d\": {\"price\": 1.8, \"priceQuantity\": 100}}, \"job\": {\"price\": 0.04, \"priceQuantity\": 1000}, \"tracing\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"logging_keyevent\": {\"14d\": {\"price\": 0.35, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 0.65, \"priceQuantity\": 1000000}, \"180d\": {\"price\": 1.2, \"priceQuantity\": 1000000}}}, \"discountQuantitySet\": {\"ts\": 0, \"job\": 1000, \"datakit\": 0, \"tracing\": 0, \"logging_keyevent\": 0}}');

      -- 增加 免费用户额度限制
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimit', '免费额度', '{\"ts\": 500, \"job\": 1000, \"datakit\": 5, \"tracing\": 1000000, \"logging_keyevent\": 1000000}');


      -- 原有的非体验版变更为 付费版
      update main_workspace set versionType="free", billingState="free" where status=0 and versionInfo ->> "$.version" = "free";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "BASIC";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "TEAM";
      update main_workspace set versionType="pay", billingState="normal" where status=0 and versionInfo ->> "$.version" = "ADVANCED";
      update main_workspace set versionType="unlimited", billingState="normal" where status=0 and versionInfo ->> "$.version" = "unlimited";


      -- 初始化 durationSet 数据
      -- 更新 rp
      update main_workspace set durationSet=JSON_OBJECT("rp", "1d") where `status` = 0 and rpName='rp0';
      update main_workspace set durationSet=JSON_OBJECT("rp", "7d") where `status` = 0 and rpName='rp1';
      update main_workspace set durationSet=JSON_OBJECT("rp", "30d") where `status` = 0 and rpName='rp2';
      update main_workspace set durationSet=JSON_OBJECT("rp", "90d") where `status` = 0 and rpName='rp3';
      update main_workspace set durationSet=JSON_OBJECT("rp", "90d") where `status` = 0 and rpName='rp_2160h';
      update main_workspace set durationSet=JSON_OBJECT("rp", "180d") where `status` = 0 and rpName='rp4';
      update main_workspace set durationSet=JSON_OBJECT("rp", "365d") where `status` = 0 and rpName='rp5';
      update main_workspace set durationSet=JSON_OBJECT("rp", "1095d") where `status` = 0 and rpName='rp6';

      -- 更新 logging 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "1d") where `status` = 0 and esRP ->> "$.logging" ="es_rp0";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "7d") where `status` = 0 and esRP ->> "$.logging" ="es_rp1";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "14d") where `status` = 0 and esRP ->> "$.logging" ="es_rp2";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "30d") where `status` = 0 and esRP ->> "$.logging" ="es_rp3";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "90d") where `status` = 0 and esRP ->> "$.logging" ="es_rp4";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "180d") where `status` = 0 and esRP ->> "$.logging" ="es_rp5";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "365d") where `status` = 0 and esRP ->> "$.logging" ="es_rp6";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.logging", "1095d") where `status` = 0 and esRP ->> "$.logging" ="es_rp7";

      -- 更新 keyevent 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "1d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp0";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "7d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp1";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "14d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp2";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "30d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp3";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "90d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp4";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "180d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp5";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "365d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp6";
      update main_workspace set durationSet=JSON_SET(durationSet, "$.keyevent", "1095d") where `status` = 0 and esRP ->> "$.keyevent" ="es_rp7";

     
      -- 更新 tracing 的 rp
      update main_workspace set durationSet=JSON_SET(durationSet, "$.tracing", "7d") where `status` = 0;

      -- 对象分类配置中的 tags/fields 需要清空
      update biz_object_class_cfg set tags='[]', fields='[]', extend='{}';

  # 12.10 迭代
  - seq: 20

    database: |-
      -- 创建 RUM配置表
      CREATE TABLE `biz_rum_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 rum- 前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `jsonContent` json NOT NULL COMMENT '额外拓展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 工作空间新增cliToken 字段
      ALTER TABLE `main_workspace` ADD COLUMN `cliToken` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '命令行Token验证' AFTER `token`;
      -- 集成表新增字段用来控制集成的展示与隐藏
      ALTER TABLE `biz_integration` ADD COLUMN `isHidden` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否隐藏，默认隐藏' AFTER `metaHash`;
      -- 图表新增queries 字段
      ALTER TABLE `biz_chart` ADD COLUMN `queries` json NULL COMMENT '查询信息' AFTER `type`;

      -- 清理部分已删除的工作空间数据
      UPDATE biz_dashboard set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart_group set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_query set `status`=3 WHERE workspaceUUID in (select uuid from main_workspace WHERE `status`=3) and `status` != 3;
      UPDATE biz_chart set `status`=3 WHERE chartGroupUUID in (select uuid from biz_chart_group WHERE `status`=3) and `status` != 3;
      UPDATE biz_query set `status`=3 WHERE chartUUID in (select uuid from biz_chart WHERE `status`=3) and `status` != 3;

      -- 更新 main_config 标中 账单计费价格信息
      UPDATE `main_config` SET `value` = '{\"equation\": {\"ts\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"job\": \"math.ceil((count - discountQuantity)/priceQuantity)*price if count > discountQuantity else 0\", \"rum\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"tracing\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"logging_keyevent\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\"}, \"priceSet\": {\"ts\": {\"14d\": {\"price\": 1, \"priceQuantity\": 100}, \"30d\": {\"price\": 1.2, \"priceQuantity\": 100}, \"180d\": {\"price\": 1.8, \"priceQuantity\": 100}}, \"job\": {\"price\": 0.04, \"priceQuantity\": 1000}, \"rum\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"tracing\": {\"7d\": {\"price\": 0.3, \"priceQuantity\": 1000000}, \"14d\": {\"price\": 0.5, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 1, \"priceQuantity\": 1000000}}, \"logging_keyevent\": {\"14d\": {\"price\": 0.35, \"priceQuantity\": 1000000}, \"30d\": {\"price\": 0.65, \"priceQuantity\": 1000000}, \"180d\": {\"price\": 1.2, \"priceQuantity\": 1000000}}}, \"discountQuantitySet\": {\"ts\": 0, \"job\": 1000, \"rum\": 0, \"datakit\": 0, \"tracing\": 0, \"logging_keyevent\": 0}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 初始化各个工作空间的 rum rp 数据
      update main_workspace set durationSet=JSON_SET(durationSet, "$.rum", "7d") where `status` = 0;

  # 12.22 迭代
  - seq: 21

    database: |-
      -- 创建 datakit online 信息表
      CREATE TABLE `main_datakit_online` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 dkol-',
        `name` varchar(128) DEFAULT '' COMMENT 'datakit name',
        `hostName` varchar(128) DEFAULT NULL COMMENT 'host name',
        `ip` varchar(24) DEFAULT NULL COMMENT 'ip 地址',
        `token` varchar(64) NOT NULL COMMENT '采集数据token',
        `dkUUID` varchar(48) NOT NULL COMMENT 'datakit uuid',
        `version` varchar(48) DEFAULT '' COMMENT 'datakit version',
        `os` varchar(48) DEFAULT '' COMMENT 'os',
        `arch` varchar(48) DEFAULT '' COMMENT 'arch',
        `inputInfo` json DEFAULT NULL COMMENT 'input 相关信息',
        `lastOnline` int(11) DEFAULT NULL COMMENT '最后一次online时间',
        `lastHeartbeat` int(11) DEFAULT NULL COMMENT '最后一次心跳时间',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `k_dkuuid` (`dkUUID`) USING BTREE
      ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4;

  # 12.29 迭代
  - seq: 22

    database: |-
      -- 视图表新增绑定类型
      ALTER TABLE `biz_dashboard` ADD COLUMN `ownerType` enum('node','inner','object_class','workspace','account','') CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' AFTER `type`;

      -- 在视图上添加 image 字段用于存储 base64image
      ALTER TABLE `biz_dashboard` ADD COLUMN `image` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '视图的缩略图' AFTER `name`;

      -- 在视图变量中添加排序字段 seq
      ALTER TABLE `biz_variable` ADD COLUMN `seq` int(4) NOT NULL DEFAULT 0 COMMENT '变量排序' AFTER `dashboardUUID`;

      -- 以上更新表
      -- 以下更新数据

      -- 更新视图拥有者的类型-对象分类配置视图
      UPDATE biz_dashboard set ownerType='inner' WHERE status=0 and uuid in (select dashboardUUID from biz_object_class_cfg WHERE status=0 and dashboardUUID <>"");
      -- 更新节点视图的拥有者类型
      UPDATE biz_dashboard set ownerType='node' WHERE status=0 and uuid in (select dashboardUUID from biz_node WHERE status=0 and dashboardUUID <>"");
      UPDATE biz_dashboard set ownerType='node' WHERE status=0 and uuid in (select subDashboardUUID from biz_node WHERE status=0 and subDashboardUUID <>"");


      -- 更新视图拥有者-工作空间视图
      UPDATE biz_dashboard set ownerType='workspace' WHERE status=0 and uuid in (select dashboardUUID from main_workspace WHERE status=0 and dashboardUUID <>"");

      -- 更新视图拥有者-账号视图
      UPDATE biz_dashboard set ownerType='account' WHERE status=0 and uuid in (select dashboardUUID from main_account_workspace WHERE status=0 and dashboardUUID <>"");

      -- 历史数据中的 __tags/.keyword 替换为空
      -- 更新【图表】中的 __tags/.keyword 涉及 queries/extend
      update biz_chart set queries=REPLACE(REPLACE(queries, ".keyword", ""), "__tags.", "") where (queries like "%__tags.%" or queries like "%.keyword%");
      update biz_chart set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like "%__tags.%" or extend like "%.keyword%");

      -- 更新【触发规则】中的 __tags/.keyword 涉及 jsonScript/extend 字段
      update biz_rule set jsonScript=REPLACE(REPLACE(jsonScript, ".keyword", ""), "__tags.", "") where (jsonScript like '%__tags.%' or jsonScript like '%.keyword%');
      update biz_rule set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like '%__tags.%' or extend like '%.keyword%');

      -- 更新【视图】中的 __tags./.keyword  涉及 extend 字段
      update biz_dashboard set extend=REPLACE(REPLACE(extend, ".keyword", ""), "__tags.", "") where (extend like '%__tags.%' or extend like '%.keyword%');

      -- 更新【集成包】中的 __tags./.keyword  涉及 meta 字段
      update biz_integration set meta=REPLACE(REPLACE(meta, ".keyword", ""), "__tags.", "") where (meta like '%__tags.%' or meta like '%.keyword%');





  # 2021.01.14 迭代
  - seq: 23

    database: |-
      -- 新建视图绑定关系表
      CREATE TABLE `biz_dashboard_binding_relationship` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `targetType` varchar(48) NOT NULL COMMENT '目标类型',
        `targetUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `dashboardUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        PRIMARY KEY (`id`),
        KEY `k_dash_rel_uuid` (`workspaceUUID`,`targetType`,`targetUUID`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 解除工作空间 无效字段`bindInfo`的必填限制
      ALTER TABLE `main_workspace` MODIFY COLUMN `bindInfo` json NULL COMMENT '绑定到当前工作空间的信息' AFTER `versionInfo`;

      -- 视图变量新增 是否隐藏字段
      ALTER TABLE `biz_variable` ADD COLUMN `hide` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否隐藏' AFTER `content`;


      -- 以上更新表
      -- 以下更新数据

      -- 变更RUM的类型字段值 将微信小程序 wechat_applet 变更为 miniapp
      update biz_rum_cfg set jsonContent=JSON_SET(jsonContent, "$.type", "miniapp") where jsonContent ->> "$.type" ="wechat_applet";

      -- 更新【视图】中的字段 Key1 => Key2   涉及 extend 字段
      update biz_dashboard set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<> "KEYEVENT" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


      -- 更新【图表】中的字段  Key1 => Key2 涉及 queries/extend
      update biz_chart set queries=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(queries, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<>"alarm" and  status<>3 and queries not like "%keyevent%" and (queries like "%\__status%"  or queries like "%\__source%"  or queries like "%\__serviceName%"  or queries like "%\__parentID%"  or queries like "%\__operationName%"  or queries like "%\__spanID%"  or queries like "%\__traceID%"  or queries like "%\__spanType%"  or queries like "%\__endpoint%"  or queries like "%\__content%"  or queries like "%\__duration%"  or queries like "%\__isError%"  or queries like "%\__name%"  or queries like "%\__class%"  or queries like "%\__timestampMs%" ) ;

      update biz_chart set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where `type`<>"alarm" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


      -- 更新【触发规则】中的字段 Key1 => Key2 涉及 jsonScript/extend 字段
      update biz_rule set jsonScript=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(jsonScript, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where jsonScript ->> "$.type" <> "keyeventCheck" and  status<>3 and jsonScript not like "%keyevent%" and (jsonScript like "%\__status%"  or jsonScript like "%\__source%"  or jsonScript like "%\__serviceName%"  or jsonScript like "%\__parentID%"  or jsonScript like "%\__operationName%"  or jsonScript like "%\__spanID%"  or jsonScript like "%\__traceID%"  or jsonScript like "%\__spanType%"  or jsonScript like "%\__endpoint%"  or jsonScript like "%\__content%"  or jsonScript like "%\__duration%"  or jsonScript like "%\__isError%"  or jsonScript like "%\__name%"  or jsonScript like "%\__class%"  or jsonScript like "%\__timestampMs%" ) ;

      update biz_rule set extend=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(extend, "__status", "status"), "__source", "source"), "__serviceName", "service"), "__parentID", "parent_id"), "__operationName", "operation"), "__spanID", "span_id"), "__traceID", "trace_id"), "__spanType", "span_type"), "__endpoint", "endpoint"), "__content", "message"), "__duration", "duration"), "__isError", "status"), "__name", "name"), "__class", "class"), "__timestampMs", "date") where jsonScript ->> "$.type" <> "keyeventCheck" and  status<>3 and extend not like "%keyevent%" and (extend like "%\__status%"  or extend like "%\__source%"  or extend like "%\__serviceName%"  or extend like "%\__parentID%"  or extend like "%\__operationName%"  or extend like "%\__spanID%"  or extend like "%\__traceID%"  or extend like "%\__spanType%"  or extend like "%\__endpoint%"  or extend like "%\__content%"  or extend like "%\__duration%"  or extend like "%\__isError%"  or extend like "%\__name%"  or extend like "%\__class%"  or extend like "%\__timestampMs%" ) ;


  # 2021.02.02 迭代
  - seq: 24
    config:
      core: |-
        kodo:
          # 在installCmd/upgradeCmd 命令原有的基础上插入 `DW_KODO_WS=wss://kodo.dataflux.cn`
          installCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_KODO_WS=wss://kodo.dataflux.cn  DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} bash -c "$(curl http://zhuyun-static-files-testing.oss-cn-hangzhou.aliyuncs.com/dataway/install.sh)"'
          upgradeCmd: 'DW_KODO=https://kodo.dataflux.cn  DW_KODO_WS=wss://kodo.dataflux.cn DW_TOKEN={token}  DW_UUID={agent_uuid} DW_AK={ak}  DW_SK={sk} DW_UPGRADE=1  bash -c "$(curl http://zhuyun-static-files-testing.oss-cn-hangzhou.aliyuncs.com/dataway/install.sh)"'


    database: |-
      -- 新建监视器表
      CREATE TABLE `biz_monitor` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, monitor-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `type` enum('custom','inner') NOT NULL DEFAULT 'custom',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '规则分组名字',
        `config` json DEFAULT NULL COMMENT '其他设置',
        `alertOpt` json DEFAULT NULL COMMENT '触发操作设置',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 规则表新增【监视器UUID】字段
      ALTER TABLE `biz_rule` ADD COLUMN `monitorUUID` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '监视器UUID' AFTER `kapaUUID`;

      -- 废弃并清理 image 字段（执行此操作前需要先清理 image 字段的数据）
      -- 清理图表中的 image 字段数据
      update biz_dashboard set image="";
      ALTER TABLE `biz_dashboard` MODIFY COLUMN `image` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '视图的缩略图-废弃' AFTER `name`;


      -- 以上更新表
      -- 以下更新数据

      -- 删除旧的触发规则
      DELETE FROM biz_rule where type='baseline';
      update biz_rule set status=3 where type='aggs' and status=0;
      update biz_rule set status=2 where type='trigger' and status=0;


  # 2021.03.02 迭代
  - seq: 25
    database: |-
      -- 新建通知对象
      CREATE TABLE `biz_notify_object` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, monitor-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '通知对象名称',
        `type` enum('dingTalkRobot','HTTPRequest') NOT NULL DEFAULT 'dingTalkRobot',
        `optSet` json DEFAULT NULL COMMENT '操作设置',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      CREATE TABLE `main_key_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID,带keycf-',
        `workspaceUUID` varchar(48) NOT NULL COMMENT '工作空间uuid',
        `keyCode` varchar(48) NOT NULL COMMENT '配置项唯一Code',
        `description` text NOT NULL COMMENT '描述信息',
        `value` json NOT NULL COMMENT '配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 提出场景无效字段的空值设置
      ALTER TABLE `biz_scene`
      MODIFY COLUMN `measurementLimit` json NULL COMMENT '指标集限制' AFTER `describe`,
      MODIFY COLUMN `filter` json NULL COMMENT '过滤条件' AFTER `measurementLimit`;

      ALTER TABLE `biz_node`
      MODIFY COLUMN `measurementLimit` json NULL COMMENT '指标集限制' AFTER `iconSet`,
      MODIFY COLUMN `isInheritance` tinyint(1) NULL DEFAULT 1 COMMENT '是否继承' AFTER `filter`,
      MODIFY COLUMN `subTagKeys` json NULL COMMENT '子节点 tag 键值' AFTER `subTagKeyMeasurements`,
      MODIFY COLUMN `bindTagValues` json NULL COMMENT '绑定虚拟节点值' AFTER `subTagKeys`,
      MODIFY COLUMN `subIsInheritance` tinyint(1) NULL DEFAULT 1 COMMENT '子节点是否继承父节点过滤条件' AFTER `subIconSet`,
      MODIFY COLUMN `bindInfo` json NULL COMMENT '节点绑定信息' AFTER `subIsInheritance`;


  # 2021.03.25 迭代
  - seq: 26
    database: |-

      -- 新增告警配置表， 当前仅限于 主机静默的配置字段
      CREATE TABLE `biz_mute` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID mute- 前缀',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `tags` json DEFAULT NULL COMMENT '目标的tags',
        `start` int(11) NOT NULL DEFAULT '-1',
        `end` int(11) NOT NULL DEFAULT '-1',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 通知对象新增 wechatRobot 类型
      ALTER TABLE `biz_notify_object`
      MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'dingTalkRobot' AFTER `name`;

      -- 删除原视图绑定关系表中的数据
      delete from biz_dashboard_binding_relationship;
      -- 调整原视图绑定关系表字段
      ALTER TABLE `biz_dashboard_binding_relationship`
      CHANGE COLUMN `dashboardUUID` `extend` json NOT NULL COMMENT '额外数据' AFTER `targetUUID`,
      ADD COLUMN `sourceType` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '源类型' AFTER `workspaceUUID`,
      ADD COLUMN `sourceUUID` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '源标记ID' AFTER `sourceType`,
      MODIFY COLUMN `targetType` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '目标类型' AFTER `sourceUUID`,
      DROP INDEX `k_dash_rel_uuid`,
      ADD INDEX `k_wksp_uuid`(`workspaceUUID`) USING BTREE,
      ADD INDEX `k_source_uuid`(`sourceUUID`) USING BTREE,
      ADD INDEX `k_target_uuid`(`targetUUID`) USING BTREE;

      -- 变更原视图绑定关系表的表名
      alter table biz_dashboard_binding_relationship rename AS biz_entity_relationship;
      -- 规则表新增类型`cloud_correlation_switch`
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs','cloud_correlation_switch') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 变更 main_key_config 表
      alter  table main_key_config modify value  TEXT NOT NULL COMMENT '配置数据';


  # 2021.04.07 迭代
  - seq: 27
    database: |-

      -- 视图新增mapping字段
      ALTER TABLE `biz_dashboard`
      ADD COLUMN `mapping` json NOT NULL COMMENT '视图变量的mapping' AFTER `extend`;

      -- 同步更新历史数据
      update biz_dashboard set mapping="[]" WHERE status != 3;

  # 2021.04.14 迭代
  - seq: 28
    config:
      core: |-
        # CloudCare 系统配置
        # 部署版本暂时不使用此配置，可以不作修改
        CloudCareServer:
          use_https: true
          port: 443
          host: "www.cloudflux.cn"
          ak_id: ""
          ak_secret: ""
          timeout: 30

        # 云拨测服务
        DialingServer:
          # 拨测服务中心的地址配置
          # 此处不需要修改
          use_https: true
          host: dflux-dial.dataflux.cn
          port: 443
          timeout: 10

          # 此处需要向产品侧索取拨测服务的 AK
          # 每个部署版本一组 AK 信息
          ak_id: ""
          ak_secret: ""
          
          # 每个部署的版本有不同的 DataWay 地址
          # 用于将拨测数据打入到相应部署版本工作空间内
          # 只要修改 host，保留原样的 ?token={} 参数，格式不要修改
          open_dataway_url: "http://openway.cloudcare.cn?token={}"

    database: |-

      -- 云拨测任务
      CREATE TABLE `biz_dialing_tasks` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, dial-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `type` enum('http','tcp','dns') NOT NULL DEFAULT 'http',
        `regions` json NOT NULL,
        `task` json NOT NULL COMMENT '任务数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 通知对象新增邮件组
      ALTER TABLE `biz_notify_object`
      MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot','mailGroup') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'dingTalkRobot' AFTER `name`;

      -- 调整监视器类型
      ALTER TABLE `biz_monitor`
      MODIFY COLUMN `type` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'custom' AFTER `workspaceUUID`;

      -- 插入 限制信息
      INSERT INTO `df_core`.`main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 500, \"job\": 5000, \"logs\": 2000000}');

      -- 更新计费配置
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price if count > discountQuantity else 0\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';


  # 2021.05.07 迭代
  - seq: 29
    database: |-

      -- 新增 日志备份的规则类型
      ALTER TABLE `biz_rule`
      MODIFY COLUMN `type` enum('trigger','baseline','aggs','cloud_correlation_switch','logbackup') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'trigger' AFTER `workspaceUUID`;

      -- 更新 security 的 rp, 默认180d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.security", "180d") where `status` = 0;
      -- 更新 backup_log 的 rp, 默认 180d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.backup_log", "180d") where `status` = 0;

      -- 更新账单计费规则, 新增了 备份日志的账单规则
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 批量更新数据保留时长，将365d变更为360d; 无需刷新influx 和ES
      update main_workspace set durationSet=REPLACE(durationSet, "365d", "360d") where `status`=0;

      -- 插入价格计费信息
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 10000, \"count_equation\": \"count\", \"discountQuantity\": 10000}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"priceQuantity\": 1, \"count_equation\": \"int(count + math.ceil((ts_count - count*discountQuantity)/discountQuantity)) if (ts_count / (1 if count == 0 else count)) > discountQuantity else count\", \"discountQuantity\": 500}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"priceQuantity\": 1000000, \"count_equation\": \"count\", \"discountQuantity\": 1000000}}');


  # 2021.05.20 迭代
  - seq: 30
    database: |-

      -- 新增 查询快照
      CREATE TABLE `biz_snapshots` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，前缀snapshot',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间唯一UUID',
        `accountUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '账号Uuid',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '快照名称',
        `type` enum('logging','keyevent','tracing','object','dialing_task','security','rum') NOT NULL DEFAULT 'logging' COMMENT '快照类型',
        `content` json NOT NULL COMMENT '用户自定义配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `acnt_wksp_fk` (`workspaceUUID`,`accountUUID`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 创建全球区域表
      CREATE TABLE `biz_geo` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `country` varchar(128) NOT NULL DEFAULT '' COMMENT '国家',
        `province` varchar(128) NOT NULL DEFAULT '' COMMENT '省份',
        `city` varchar(128) NOT NULL DEFAULT '' COMMENT '城市',
        PRIMARY KEY (`id`),
        KEY `k_country` (`country`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


  # 2021.06.03 迭代
  - seq: 31
    database: |-

      -- 新增 账号设备表，用于记录用户移动端登录过的设备信息
      CREATE TABLE `biz_account_device` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `accountId` varchar(64) NOT NULL DEFAULT '' COMMENT 'account id',
        `deviceId` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备ID',
        `deviceVersion` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备版本',
        `deviceOS` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备系统',
        `deviceOSVersion` varchar(256) NOT NULL DEFAULT '' COMMENT '登录设备系统系统版本',
        `registrationId` varchar(48) NOT NULL DEFAULT '' COMMENT '推送系统内的ID',
        `loginTime` int(11) NOT NULL DEFAULT '-1' COMMENT '登录时间',
        `heartBeat` int(11) NOT NULL DEFAULT '-1' COMMENT '最后心跳时间',
        `inUse` int(1) NOT NULL DEFAULT '0' COMMENT '使用状态',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`) COMMENT 'sk 可以存在相同的情况',
        KEY `uk_acnt` (`accountId`) USING BTREE COMMENT '全局唯一',
        KEY `uk_device` (`deviceId`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增登录历史记录
      CREATE TABLE `biz_account_login_history` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT 'login-前缀',
        `accountUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '账号Uuid',
        `platform` varchar(48) NOT NULL DEFAULT '' COMMENT '登录平台',
        `loginTime` int(11) NOT NULL DEFAULT '-1' COMMENT '记录登录时间',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `accountUUID_fk` (`accountUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增 kodo上报使用量给cc的请求历史表
      CREATE TABLE `biz_post_cc_history` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `date` varchar(256) NOT NULL DEFAULT '' COMMENT '上传日期',
        `detail` json DEFAULT NULL COMMENT '上传详情',
        `status` varchar(48) NOT NULL DEFAULT 'success' COMMENT '上传状态',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        PRIMARY KEY (`id`) COMMENT '主键'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 云拨测任务新增`headless`类型
      ALTER TABLE `biz_dialing_tasks`
      MODIFY COLUMN `type` enum('http','tcp','dns','browser') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'http' AFTER `workspaceUUID`;

      -- 历史日志生成指标规则补全 interval 字段
      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 60) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "1m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 300) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "5m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 900) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "15m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 1800) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "30m";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 3600) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "1h";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 43200) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "12h";

      update biz_rule set jsonScript=JSON_SET(jsonScript, "$.interval", 86400) WHERE status <>3 and type="aggs" and jsonScript ->> "$.every" = "24h";


      -- 更新计费价格公式
      UPDATE `main_config` SET `description` = 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', `value` = '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"int(math.ceil((ts_count)/500)+count ) if (ts_count / (count or 1)) > 500 else count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"(count + keyevent_count + security_count - datakit_count * 1000000) if count + keyevent_count + security_count > datakit_count * 1000000 else 0\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}' WHERE `keyCode` = 'MeteringUnitPriceConfig';

      -- 更新使用量限制信息
      UPDATE `main_config` SET `description` = '免费额度', `value` = '{\"ts\": 500, \"job\": 5000, \"rum\": 100, \"logs\": 2000000, \"trace\": 10000}' WHERE `keyCode` = 'FreeLimitV2';


  # 2021.06.17 迭代
  - seq: 32
    database: |-

      -- 新增 指标类型快照
      ALTER TABLE biz_snapshots MODIFY COLUMN `type` enum('logging','keyevent','tracing','object','dialing_task','security','rum','measurement') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'logging' NOT NULL COMMENT '快照类型';

      -- 视图表新增 `iconSet` 字段用于记录视图的图表信息
      ALTER TABLE `biz_dashboard`
      ADD COLUMN `iconSet` json NOT NULL COMMENT '视图缩略图信息' AFTER `image`;

      -- 调整分享配置表
      ALTER TABLE `biz_share_config`
      DROP COLUMN `shareCode`,
      ADD COLUMN `content` json NOT NULL COMMENT '分享对象的快照内容' AFTER `meta`,
      DROP INDEX `k_share_code`;

      -- 新加了biz_data_blacklist_rule表
      CREATE TABLE `biz_data_blacklist_rule` (
      	`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      	`uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, bkrul-',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
      	`type` enum('logging') NOT NULL DEFAULT 'logging' COMMENT '数据源类型',
      	`source` varchar(64) NOT NULL DEFAULT '' COMMENT '数据来源',
      	`filters` json NOT NULL COMMENT '过滤条件列表',
      	`conditions` text NOT NULL COMMENT 'dql格式的过滤条件',
      	`status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
      	`creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      	`updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      	`createAt` int(11) NOT NULL DEFAULT '-1',
      	`deleteAt` int(11) NOT NULL DEFAULT '-1',
      	`updateAt` int(11) NOT NULL DEFAULT '-1',
      	PRIMARY KEY (`id`),
      	UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      	KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 新加了biz_email表
      CREATE TABLE `biz_email` (
      	`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      	`uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, 前缀是email_',
      	`workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
      	`type` enum('almost','already') NOT NULL DEFAULT 'almost' COMMENT '邮件类型',
      	`temName` varchar(64) NOT NULL DEFAULT '' COMMENT '邮件模版名',
      	`info` json NOT NULL COMMENT '邮件参数',
      	`content` text NOT NULL COMMENT '邮件内容',
      	`status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
      	`creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      	`updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      	`createAt` int(11) NOT NULL DEFAULT '-1',
      	`deleteAt` int(11) NOT NULL DEFAULT '-1',
      	`updateAt` int(11) NOT NULL DEFAULT '-1',
      	PRIMARY KEY (`id`),
      	UNIQUE KEY `email_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      	KEY `e_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 注意，此处需要先删除分享数据之后，才能更新`AUTO_INCREMENT`
      DELETE FROM biz_share_config;
      -- 重设 AUTO_INCREMENT
      ALTER TABLE `biz_share_config` AUTO_INCREMENT = 0;

      -- 初始化现有视图的`iconSet`字段数据
      update biz_dashboard set iconSet='{}' WHERE `status`=0;

      -- 清理场景已删除，但内部节点未删除的数据1
      UPDATE biz_node set status=3 where status=0 and sceneUUID in (select uuid from biz_scene where `status`=3);
      -- 清理节点已删除，但是关联视图未删除的数据2
      UPDATE biz_dashboard set status=3 WHERE status=0 and uuid in (SELECT dashboardUUID as uuid from biz_node WHERE status=3);
      -- 清理视图已删除，但关联的视图变量未删除的数据3
      UPDATE biz_variable set status=3 WHERE status=0 and dashboardUUID in (SELECT uuid from biz_dashboard WHERE status=3);
      -- 清理视图已删除，但关联的图表未删除的数据4
      UPDATE biz_chart set status=3 WHERE status=0 and dashboardUUID in (SELECT uuid from biz_dashboard WHERE status=3);

      -- 插入体验版工作空间使用量统计配置
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeMeteringUnitConfig', '体验版工作空间使用量统计计算配置; priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count + keyevent_count + security_count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 免费额度限制配置
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 500, \"job\": 5000, \"rum\": 100, \"logs\": 2000000, \"trace\": 10000}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 付费版工作空间使用量和计费统计公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"int(math.ceil((ts_count)/500)+count ) if (ts_count / (count or 1)) > 500 else count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"(count + keyevent_count + security_count - datakit_count * 1000000) if count + keyevent_count + security_count > datakit_count * 1000000 else 0\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


  # 2021.07.01 迭代
  - seq: 33
    database: |-

      -- 清空【对象分类配置表】数据
      delete from biz_object_class_cfg;
      -- 重置【对象分类配置表】的递增初始值
      ALTER TABLE `biz_object_class_cfg` AUTO_INCREMENT = 0;

      -- 调整【对象分类配置表】字段
      ALTER TABLE `biz_object_class_cfg`
      DROP COLUMN `dashboardUUID`,
      DROP COLUMN `retentionPeriod`,
      DROP COLUMN `publicSet`,
      DROP COLUMN `colSets`,
      DROP COLUMN `tags`,
      ADD COLUMN `sourceType` enum('object','custom_object') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'custom_object' COMMENT '数据源来源类型' AFTER `workspaceUUID`,
      ADD COLUMN `dashboardBindSet` json NULL COMMENT '视图绑定设置列表' AFTER `alias`,
      MODIFY COLUMN `fields` json NULL COMMENT '属性配置列表' AFTER `dashboardBindSet`;

      -- 通知对象新加飞书机器人类型
      ALTER TABLE biz_notify_object MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot','mailGroup','feishuRobot') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'dingTalkRobot' NOT NULL;

      -- 添加内置对象分类名配置
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('BuiltInObjectClass', '内置对象分类列表', '[\"host_processes\", \"docker_containers\", \"kubelet_pod\", \"HOST\", \"kubelet_pod\"]')  ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


  # 2021.07.29 迭代
  - seq: 34
    database: |-

      -- 新建【工作空间Token表】
      CREATE TABLE `main_workspace_token` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '采集数据token 唯一标识 tokn-',
        `expirationAt` int(11) NOT NULL DEFAULT '-1' COMMENT '过期时间',
        `workspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: 正常/2: 禁用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `uk_wksp` (`workspaceUUID`) USING BTREE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 通知对象新增 短信通知类型
      ALTER TABLE `biz_notify_object`
      MODIFY COLUMN `type` enum('dingTalkRobot','HTTPRequest','wechatRobot','mailGroup','feishuRobot','sms') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'dingTalkRobot' AFTER `name`;

      -- 新增invitation邮件类型
      ALTER TABLE biz_email MODIFY COLUMN `type` enum('almost','already','invitation') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'almost' NOT NULL COMMENT '邮件类型';

      -- 历史工作空间的Token刷入到新表中
      Insert into main_workspace_token(uuid, expirationAt, workspaceUUID, creator, updator, status, createAt, updateAt, deleteAt) select token as uuid, -1 as expirationAt, uuid as workspaceUUID, creator, updator, status, createAt, updateAt, deleteAt from main_workspace;

      -- 新增工作空间使用量统计公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('UsageStatisticalFormula', '工作空间使用量统计公式（非计费公式）', '{\"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 更细计算公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"sms\": {\"price\": 0.1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, sum([count, keyevent_count, security_count]) - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}')  ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 更新系统内置的对象分类列表
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('BuiltInObjectClass', '内置对象分类列表', '[\"host_processes\", \"docker_containers\", \"kubelet_pod\", \"HOST\", \"kubernetes_pods\", \"kubernetes_services\", \"kubernetes_deployments\"]') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


  # 2021.08.12 迭代
  - seq: 35
    database: |-

      -- 快照支持 other 类型
      ALTER TABLE `biz_snapshots`
      MODIFY COLUMN `type` enum('logging','keyevent','tracing','object','dialing_task','security','rum','measurement','other','scene_dashboard','dashboard') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'logging' COMMENT '快照类型' AFTER `name`;

      -- 更新计费公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 10000)\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 100)\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"sms\": {\"price\": 0.1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, sum([count, keyevent_count, security_count]) - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}')  ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 添加账号角色
      ALTER TABLE `main_account_workspace`
      ADD COLUMN `role` enum('wsAdmin','general','readOnly','') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '用户在当前工作空间的角色' AFTER `dashboardUUID`,
      ADD COLUMN `allSceneVisible` int(1) NOT NULL DEFAULT 0 COMMENT '可见所有场景' AFTER `role`;

      -- 所有工作空间管理员设置角色
      update main_account_workspace set role='wsAdmin' where isAdmin=1 and `status`=0;


  # 2021.08.26 迭代
  - seq: 36
    database: |-

      -- biz_share_config表中添加shortUrl属性
      ALTER TABLE biz_share_config ADD shortUrl varchar(128) NULL COMMENT '短链接';

      -- 更新系统内置的对象分类列表
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('BuiltInObjectClass', '内置对象分类列表', '[\"host_processes\", \"docker_containers\", \"kubelet_pod\", \"HOST\", \"kubernetes_pods\", \"kubernetes_services\", \"kubernetes_deployments\", \"kubernetes_clusters\", \"kubernetes_nodes\", \"kubernetes_replica_sets\"]') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

    config:
      core: |-
        kodo:
          datakitVersionUrl: "https://static.dataflux.cn/datakit/version"

  # 2021.09.09 迭代
  - seq: 37
    database: |-

      -- 更新系统内置的对象分类列表
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('BuiltInObjectClass', '内置对象分类列表', '[\"host_processes\", \"docker_containers\", \"kubelet_pod\", \"HOST\", \"kubernetes_pods\", \"kubernetes_services\", \"kubernetes_deployments\", \"kubernetes_clusters\", \"kubernetes_nodes\", \"kubernetes_replica_sets\", \"kubernetes_jobs\", \"kubernetes_cron_jobs\"]') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 更新使用量计费逻辑公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 10000)\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 100)\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"sms\": {\"price\": 0.1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 15, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, sum([count, keyevent_count, security_count]) - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"browser_test\": {\"price\": 15, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 免费额度配置参数
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 500, \"job\": 5000, \"rum\": 100, \"logs\": 2000000, \"trace\": 10000, \"dialing_task\": 5}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 使用量公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('UsageStatisticalFormula', '工作空间使用量统计公式（非计费公式）', '{\"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum_pv\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"api_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"browser_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

  # 2021.09.28 迭代
  - seq: 38
    database: |-

      -- 新增 network 数据类型配置，体验版刷新成1d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.network", "1d") where `status` = 0 and versionType='free';

      -- 新增 network 数据类型配置，付费版/部署版 刷新成2d
      update main_workspace set durationSet=JSON_SET(durationSet, "$.network", "2d") where `status` = 0 and (versionType='pay' or versionType='unlimited');

      -- 更新使用量计费逻辑公式(此公式仅SAAS版有效，PAAS版无效)
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 10000)\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 100)\", \"priceQuantity\": 100, \"discountQuantity\": 0}, \"sms\": {\"price\": 0.1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 0.3, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 5, \"equation\": \"count*price\", \"countEquation\": \"count + math.ceil(max(0, ts_count - count * 500) / 500)\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 0.5, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, sum([count, keyevent_count, security_count]) - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 1000000)\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"browser_test\": {\"price\": 15, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

  # 2021.10.21 迭代
  - seq: 39
    database: |-

      -- 新建【用户访问监测追踪表】
      CREATE TABLE `biz_rum_trace` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, rtrace-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(64) NOT NULL DEFAULT '' COMMENT '追踪名称',
        `tags` json NOT NULL COMMENT '标签',
        `appId` varchar(64) NOT NULL,
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

  # 2021.11.04 迭代
  - seq: 40
    config:
      core: |-
        database:
          # 数据库链接配置中的字符集从【utf8】变更为【utf8mb4】,目的是为了支持表情符号的存储传输
          connection: "xxxxxx/df_core?charset=utf8mb4"

    database: |-

      -- 新建【资源关联关系】表
      CREATE TABLE `biz_resource_relationship` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间唯一UUID',
        `sourceUUID` varchar(48) NOT NULL COMMENT '源UUID',
        `type` varchar(48) NOT NULL COMMENT '关系类型',
        `targetUUID` varchar(48) NOT NULL COMMENT '目标UUID',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `workspaceUUID_fk` (`workspaceUUID`),
        KEY `sourceUUID_fk` (`sourceUUID`),
        KEY `type_fk` (`type`),
        KEY `targetUUID_fk` (`targetUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新建【笔记】表
      CREATE TABLE `biz_notes` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 notes-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL COMMENT '笔记名字',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `pos` json NOT NULL COMMENT 'charts 位置信息[]',
        `createdWay` enum('import','template','') NOT NULL DEFAULT '' COMMENT '笔记的创建方式',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新建【访问记录表】
      CREATE TABLE `biz_often_browse_record` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间唯一UUID',
        `accountUUID` varchar(48) NOT NULL COMMENT '源UUID',
        `type` varchar(48) NOT NULL COMMENT '关系类型',
        `resourceUUID` varchar(48) NOT NULL COMMENT '目标UUID',
        `dateNum` int(11) NOT NULL DEFAULT '0' COMMENT '日期',
        `visitTimes` int(11) NOT NULL DEFAULT '0' COMMENT '访问次数',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        KEY `workspaceUUID_fk` (`workspaceUUID`),
        KEY `accountUUID_fk` (`accountUUID`),
        KEY `type_fk` (`type`),
        KEY `resourceUUID_fk` (`resourceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- biz_dashbaord表新加添加方式列
      ALTER TABLE biz_dashboard ADD createdWay varchar(48) NOT NULL DEFAULT 'manual';
      -- 变更视图的名字字段大小
      ALTER TABLE `biz_dashboard`
      CHANGE COLUMN `name` `name` VARCHAR(500) NOT NULL COMMENT '视图名字' ;

      -- biz_rule的type新加类型
      ALTER TABLE biz_rule MODIFY COLUMN `type` enum('trigger','baseline','aggs','cloud_correlation_switch','logbackup','slo_detect','slo_compute') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'trigger' NOT NULL;

      -- 删除无效的节点
      update biz_node set status=3 where status=0 and  `sceneUUID` in (select uuid from biz_scene where status=3);
      -- 删除无效的节点视图
      update biz_dashboard set status=3 where status = 0 and uuid in (select `dashboardUUID` from biz_node where status=3);

  # 2021.11.18 迭代
  - seq: 41
    database: |-

      -- ******************* 以下公共可执行部分 *************************
      -- 新建【仪表板标签表】
      CREATE TABLE `biz_tag` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间唯一UUID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 tag-',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '场景名称',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 新建【查看器配置表】
      CREATE TABLE `biz_viewer_configuration` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一 ID，带 viewconfig-前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `type` enum('host','docker_containers', 'host_processes', 'custom_object') NOT NULL DEFAULT 'custom_object' COMMENT '查看器类型',
        `config` json DEFAULT NULL COMMENT '分组标签',
        `extend` json DEFAULT NULL COMMENT '额外拓展字段',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新建 【SSO配置表】
      CREATE TABLE `biz_sso_setting` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '身份提供商唯一id',
        `type` varchar(48) NOT NULL DEFAULT '' COMMENT '类别:saml2/oauth2',
        `idpName` varchar(256) NOT NULL DEFAULT '' COMMENT '身份提供商',
        `remark` varchar(512) NOT NULL DEFAULT '' COMMENT '备注',
        `uploadData` text NOT NULL COMMENT '上传数据',
        `workspaceUUID` varchar(64) NOT NULL COMMENT '工作空间 uuid',
        `role` enum('wsAdmin','general','readOnly','') NOT NULL DEFAULT '' COMMENT '用户默认角色',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        PRIMARY KEY (`id`),
        KEY `idx_uuid` (`uuid`),
        KEY `idx_wpuuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新建【sso白名单表】
      CREATE TABLE `biz_sso_white_list` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '唯一id',
        `email` varchar(256) NOT NULL DEFAULT '' COMMENT '邮箱',
        `ssoUUID` varchar(48) NOT NULL DEFAULT '' COMMENT 'sso配置唯一id',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '空间id',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        PRIMARY KEY (`id`),
        KEY `idx_email` (`email`),
        KEY `idx_wpuuid` (`workspaceUUID`),
        KEY `idx_ssouuid` (`ssoUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 账号表新增字段 nameSpace 表示命名空间
      ALTER TABLE `main_account`
      ADD COLUMN `nameSpace` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '账号的命名空间' AFTER `extend`;

      -- 查看器配置表的type类型修改为varchar(48)
      ALTER TABLE biz_viewer_configuration MODIFY COLUMN `type` VARCHAR(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT 'custom_object' NOT NULL COMMENT '查看器类型';


      -- ******************* 以下PAAS版执行部分 *************************

      -- 更新计费公式(此公式仅SAAS版有效，PAAS版无效)
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"ts\": {\"price\": 3, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 500)\", \"priceQuantity\": 500, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 0.1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 0.3, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 0.5, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 0.2, \"equation\": \"math.ceil(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 更新 体验版使用量统计公式
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('FreeMeteringUnitConfig','体验版工作空间使用量统计计算配置; priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式','{\"ts\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"job\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"count \", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"logging\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 0, \"equation\": \"0\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 更新使用量统计公式（非出账单）
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('UsageStatisticalFormula','工作空间使用量统计公式（非计费公式）','{\"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum_pv\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"ts\": {\"countEquation\": \"max(0, ts_count - count * 500)\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"api_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"browser_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);



  # 2021.12.02 迭代
  - seq: 42
    config:
      core: |-
        # 阿里云版 DF 的配置文件需要添加如下配置
        CloudCareServer:
          host: "boss.guance.com"
          node: "aliyun"

    database: |-

      -- 更新 账号工作空间关联表，新增 owner 角色
      ALTER TABLE `main_account_workspace`
      CHANGE COLUMN `role` `role` ENUM('owner', 'wsAdmin', 'general', 'readOnly', '') NOT NULL DEFAULT '' COMMENT '用户在当前工作空间的角色' ;

      -- biz_dashboard中ownertype类型新加查看器类型viewer
      ALTER TABLE biz_dashboard MODIFY COLUMN ownerType enum('node','inner','object_class','workspace','account','viewer','') CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT '' NOT NULL;

      -- 视图表新增 视图绑定设置字段
      ALTER TABLE `biz_dashboard`
      ADD COLUMN `dashboardBindSet` JSON NULL COMMENT '绑定视图设置' AFTER `mapping`;

      -- 更新计费公式(此公式仅SAAS版有效，PAAS版无效)
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"ts\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 500)\", \"priceQuantity\": 500, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 10, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1.5, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


      -- 免费额度配置参数
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 3000, \"job\": 100000, \"rum_pv\": 2000, \"logs\": 1000000, \"trace\": 8000, \"dialing_api\": 200000}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 初始 biz_dashboard 表中新增的 `dashboardBindSet` 的值
      UPDATE biz_dashboard set dashboardBindSet='[]' where dashboardBindSet is null and status <> 3;


  # 2021.12.16 迭代
  - seq: 43
    database: |-

      -- 新建 task 任务表
      CREATE TABLE `biz_tasks` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, task_',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `action` enum('ApplyAdminPermissionApproval','') NOT NULL DEFAULT '',
        `jsonScript` json DEFAULT NULL COMMENT 'script的JSON数据',
        `extend` json DEFAULT NULL COMMENT '额外配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


      -- 为静默配置表添加 相关字段
      ALTER TABLE `biz_mute`
      ADD COLUMN `type` ENUM('host', 'checker', 'monitor') NOT NULL DEFAULT 'host' COMMENT '静默对象的资源类型' AFTER `workspaceUUID`,
      ADD COLUMN `notifyTargets` JSON NULL COMMENT '通知对象列表' AFTER `tags`,
      ADD COLUMN `notifyMessage` text NOT NULL COMMENT '通知内容' AFTER `notifyTargets`,
      ADD COLUMN `notifyTime` INT(11) NOT NULL DEFAULT '-1' AFTER `notifyMessage`;

      -- 新增等待审核字段
      ALTER TABLE `main_account_workspace`
      ADD COLUMN `waitAudit` INT(1) NOT NULL DEFAULT '0' COMMENT '是否等待审核' AFTER `isAdmin`;

      -- 修复静默配置表的tags字段值
      update biz_mute set tags=CONCAT("[", tags, "]"), notifyTargets='[]' where status<>3;
      update biz_mute set notifyTargets='[]' where status<>3;


  # 2021.12.30 迭代
  - seq: 44
    database: |-

      -- 创建 ES 实例表
      CREATE TABLE `main_es_instance` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 es_',
        `host` varchar(128) NOT NULL COMMENT '源的配置信息',
        `authorization` json NOT NULL COMMENT 'influx 登陆信息',
        `isParticipateElection` int(1) NOT NULL DEFAULT '0' COMMENT '是否参与选举',
        `wsCount` int(11) NOT NULL DEFAULT '0' COMMENT '关联的工作空间数量',
        `provider` varchar(20) NOT NULL,
        `version` varchar(48) NOT NULL,
        `timeout` varchar(48) DEFAULT '60s' COMMENT '超时时间设置',
        `extend` json DEFAULT NULL,
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 创建 仪表板绑定关系
      CREATE TABLE `biz_dashboard_bidding` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '绑定关系uuid',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `dashboardUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '仪表板UUID',
        `type` varchar(128) NOT NULL COMMENT '类别：inner/integration',
        `dashboardBidding` json DEFAULT NULL COMMENT '绑定关系json',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`),
        KEY `idx_wsuuid` (`workspaceUUID`),
        KEY `idx_dsuuid` (`dashboardUUID`),
        KEY `idx_type` (`type`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 工作空间表新增ES实例UUID字段
      ALTER TABLE `main_workspace`
      ADD COLUMN `esInstanceUUID` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '所属ES实例的UUID' AFTER `dbUUID`;

      -- 工作空间表的 esInstanceUUID 字段初始化
      update main_workspace set esInstanceUUID='<旧ES实例UUID>';
      
      -- 更新历史分享中的短链地址
      update biz_share_config set shortUrl=replace(shortUrl,'t.dataflux.cn','t.guance.com');



  # 2022.01.20 迭代
  - seq: 45
    config:
      core: |-
        # kodo metric 配置自动更新
        KodoMetricInnerSet:
          isOpen: true

    database: |-
      
      -- 新建 工作空间级别的 自定义配置表， 例如日志配置
      CREATE TABLE `main_custom_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 ctcf-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `keyCode` varchar(64) DEFAULT '' COMMENT '标识code',
        `config` json NOT NULL COMMENT 'apm配置参数',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_key_code` (`keyCode`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 新建 自定义指标信息表 
      CREATE TABLE `biz_metric_detail` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, metr_',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `unit` varchar(255) NOT NULL DEFAULT '' COMMENT '单位',
        `metric` varchar(512) NOT NULL DEFAULT '' COMMENT '指标集名',
        `metricField` varchar(512) NOT NULL DEFAULT '' COMMENT '指标名',
        `describe` text NOT NULL COMMENT '描述',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `idx_ws_uuid` (`workspaceUUID`),
        KEY `idx_metric` (`metric`),
        KEY `idx_metric_field` (`metricField`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 新建 工作空间授权表，目前用于授权 dql 跨工作空间查询
      CREATE TABLE `main_workspace_grant` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT 'grant-',
        `workspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `toWorkspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '被授予权限的工作空间 uuid',
        `expireAt` int(11) NOT NULL COMMENT 'license 过期时间',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: 正常/2: 禁用/3: 删除',
        `createAt` int(11) NOT NULL DEFAULT '-1' COMMENT '创建时间',
        `updateAt` int(11) NOT NULL DEFAULT '-1' COMMENT '更新时间 ',
        `deleteAt` int(11) NOT NULL DEFAULT '-1' COMMENT '删除时间',
        PRIMARY KEY (`id`) COMMENT '主键',
        UNIQUE KEY `uk_workspaceUUID` (`workspaceUUID`) COMMENT '授权的工作空间UUID',
        UNIQUE KEY `uk_toWorkspaceUUID` (`toWorkspaceUUID`) COMMENT '被授予权限的工作空间UUID'
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 更新 ak 表, 新增 name 字段, 并剔除无效字段的索引数据
      ALTER TABLE `main_workspace_accesskey` 
      ADD COLUMN `name` VARCHAR(512) NOT NULL DEFAULT '' COMMENT 'AK 名称' AFTER `uuid` ,
      CHANGE COLUMN `ak` `ak` VARCHAR(32) NULL DEFAULT '' COMMENT 'Access Key' ,
      ADD UNIQUE INDEX `uuid_UNIQUE` (`uuid` ASC),
      DROP INDEX `uk_ak` ;
      
      -- 检查器分组新增排序优先级字段
      ALTER TABLE `biz_monitor` 
      ADD COLUMN `score` INT(11) NOT NULL DEFAULT '0' COMMENT '排序分数' AFTER `alertOpt`;

      -- 在 main_es_instance 表中追加 configJSON 字段用于记录每个 ES 实例的额外配置
      alter table `main_es_instance` add column `configJSON` json after Authorization;
      
      -- 清空AK表 main_workspace_accesskey; 原表数据于20年就已废弃
      delete from main_workspace_accesskey where name="";
      
      -- 针对 main_es_instance 表记录, 需要配置 configJSON
      -- 具体配置参考地址: https://gitlab.jiagouyun.com/cloudcare-tools/kodo/-/issues/202
      -- 适用于【阿里云elasticsearch】 configJSON 值为 {"provider": "aliyun_elasticsearch"}
      -- 适用于【阿里云openstore】 configJSON 值为 {"provider": "aliyun_openstore"}
      -- 适用于【aws提供的opensearch】 configJSON 值为 {"provider": "aws_opensearch"}
      -- 适用于【aws提供的utlrawarm】 configJSON 值为 {"provider": "aws_ultrawarm"}
      

  # 2022.02.22 迭代
  - seq: 46
    config:
      core: |-
        # 本次迭代需要执行数据修复脚本
        
        # 系统 Pipeline 同步设置
        syncInternalPipelineSet:
          # 从云端拉到本地
          pull:
            isOpen: true
          # 从本地同步至数据库中
          update:
            isOpen: true

    database: |-
      
      -- 新建 Pipeline 文件配置表
      CREATE TABLE `biz_pipeline` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID，带 pl- 前缀',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '命名',
        `content` text NOT NULL COMMENT '原始内容',
        `isSysTemplate` int(1) DEFAULT '0' COMMENT '是否为系统模版',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
            

  # 2022.03.10 迭代
  - seq: 47
    database: |-
      
      -- 调整 biz_pipeline 表 name 字段长度的限制，限制最大长度为1024
      ALTER TABLE `biz_pipeline` 
      CHANGE COLUMN `name` `name` VARCHAR(1024) NOT NULL DEFAULT '' COMMENT 'PL文件名' ;
      
      -- 将已禁用的监控器分组 设置为 启用状态
      update biz_monitor set status=0 where status=2;

  # 2022.03.24 迭代
  - seq: 48
    config:
      core: |-
        
        # 跨空间授权 邮件通知配置
        WorkspaceShare:
          enable: true

    database: |-
      
      -- 调整 biz_pipeline 表 新增`testData`字段用于存储 测试数据 1024
      ALTER TABLE `biz_pipeline` 
      ADD COLUMN `testData` TEXT NOT NULL AFTER `content`;

      -- 授权空间表修改 索引类型 及 添加新的索引
      alter table `main_workspace_grant` modify column `expireAt` int(11) NOT NULL DEFAULT '-1' COMMENT '过期时间';
      alter table `main_workspace_grant` add UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一';
      drop index `uk_workspaceUUID` on `main_workspace_grant`;
      alter table `main_workspace_grant` add KEY `idx_workspaceUUID` (`workspaceUUID`) COMMENT '授权的工作空间UUID';
      drop index `uk_toWorkspaceUUID` on `main_workspace_grant`;
      alter table `main_workspace_grant` add KEY `idx_toWorkspaceUUID` (`toWorkspaceUUID`) COMMENT '被授予权限的工作空间UUID';


      -- 【Aliyun / AWS】更新计费公式(此公式仅SAAS版有效，PAAS版无效)
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"ts\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 300)\", \"priceQuantity\": 300, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 10, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1.5, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

  # 2022.04.07 迭代
  - seq: 49
    config:
      core: |-
        
        # 注意需要将 kodo 配置中 installCmd/upgradeCmd 值中的 ` DW_AK={ak}  DW_SK={sk} `部分删除掉"
        kodo:
          installCmd: "需要剔除该值中的 ` DW_AK={ak}  DW_SK={sk} `部分数据"
          upgradeCmd: "需要剔除该值中的 ` DW_AK={ak}  DW_SK={sk} `部分数据"

    database: |-

      -- 调整拨测类型，添加tcp、icmp、websocket支持
      alter table biz_dialing_tasks modify column `type` enum('http','tcp','dns','browser','icmp','websocket') NOT NULL DEFAULT 'http';

  # 2022.04.17 迭代
  - seq: 50
    database: |-

      -- 【可选执行】视情况更新拨测服务配置语句， 可配置项为 ak,sk,dataway; 结构：{"ak": "", "sk": "", "dataway": "http://testing-openway.cloudcare.cn?token={}"}
      -- 注意，dataway 中一定要预留 token 参数
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('DialingServerSet', '拨测服务配置', '{\"ak\": \"\", \"sk\": \"\", \"dataway\": \"\"}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

  # 2022.04.21 迭代
  - seq: 51
    database: |-
      -- 快照新增 ci 类型
      ALTER TABLE `biz_snapshots` 
      CHANGE COLUMN `type` `type` ENUM('logging', 'keyevent', 'tracing', 'object', 'dialing_task', 'security', 'rum', 'measurement', 'other', 'scene_dashboard', 'dashboard', 'ci') NOT NULL DEFAULT 'logging' COMMENT '快照类型' ;

  # 2022.04.26 迭代
  - seq: 52
    database: |-
      -- sso表添加idp_md5及字段索引
      ALTER TABLE biz_sso_setting ADD COLUMN `idpMd5` varchar(48) NOT NULL DEFAULT '' COMMENT 'idp-xml关键信息md5' after `idpName`;
      ALTER TABLE biz_sso_setting add KEY `idx_idpMd5` (`idpMd5`);

    curl: |-
      # 【inner api 服务器执行】执行 fix_2022_04_25_sso_setting_account 操作 更新sso配置表及accout表
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_04_25_sso_setting_account"}'


  # 2022.05.06 迭代
  - seq: 53
    database: |-
      -- 其他 saas-xxx-upgrade.yaml 存在独立更新命令
      
      -- 免费额度配置参数更新  使各个节点的使用量限制与 SAAS 版杭州节点保持一致
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 3000, \"job\": 100000, \"rum_pv\": 2000, \"logs\": 1000000, \"trace\": 8000, \"dialing_api\": 200000}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

    curl: |-
      
      # 【inner api 服务器执行】同步更新视图模版
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/tasks/execute_task_func' \
      -H 'Content-Type: application/json' \
      --data-raw $'{"script_name": "timed_sync_integration", "func_name": "timed_sync_gitee_code", "funcKwargs": {"need_sync_integration": true}}' \
      --compressed


  # 2022.05.19 迭代
  - seq: 54
    config:
      innerApp: |-
        # inner app 需要在 【server】配置下追加`enterpriseSignupIdCodeAge`用于设置企业版注册时，每一步的idCode的缓存有效时间
        [server]
        enterpriseSignupIdCodeAge = 1800
        
        # inner app 新增配置 BossServer 配置
        [BossServer]
        akId = "与DF侧【CloudCareServer】的 ak_id 对应"
        akSecret = "与DF侧【CloudCareServer】的 ak_secret 对应"
        server = "http://testing-zc-portal.cloudflux.cn" 
        timeout = 6

      core: |-
        
        # 如果需要使用 TDengine 替换 Influxdb 则需设置为 true
        OpenTDengineServer: false

    database: |-
      -- 创建 tdengine 实例配置表
      CREATE TABLE `main_tdengine_instance` (
        `id` int(11) NOT NULL,
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 tden_',
        `host` json NOT NULL,
        `Authorization` json NOT NULL,
        `dbcount` int(11) NOT NULL,
        `status` int(11) NOT NULL,
        `createAt` int(11) NOT NULL,
        `deleteAt` int(11) NOT NULL,
        `updateAt` int(11) NOT NULL,
        PRIMARY KEY (`id`,`uuid`),
        UNIQUE KEY `uuid_UNIQUE` (`uuid`),
        UNIQUE KEY `id_UNIQUE` (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 创建 tdengine 的 db 表
      CREATE TABLE `main_tdengine_db` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 tddb_',
        `db` varchar(48) NOT NULL DEFAULT '' COMMENT 'DB 名称',
        `tdInstanceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT 'instance的UUID',
        `rpName` varchar(48) NOT NULL DEFAULT '' COMMENT '数据保留策略名',
        `status` int(11) NOT NULL COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `createAt` int(11) NOT NULL,
        `deleteAt` int(11) DEFAULT NULL,
        `updateAt` int(11) DEFAULT NULL,
        PRIMARY KEY (`id`,`uuid`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
      
      -- 为 biz_pipeline 表新增字段`category`; 本次迭代仅数据库侧增加字段;
      ALTER TABLE `biz_pipeline` 
      ADD COLUMN `category` VARCHAR(256) NOT NULL DEFAULT '' AFTER `workspaceUUID`;

    curl: |-
      
      # 【inner api 服务器执行】同步更新视图模版
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/tasks/execute_task_func' \
      -H 'Content-Type: application/json' \
      --data-raw $'{"script_name": "timed_sync_integration", "func_name": "timed_sync_gitee_code", "funcKwargs": {"need_sync_integration": true}}' \
      --compressed
      
      # 【特别注意】 - 计量数据需要迁移至ES的情况下才能执行; 创建 ES 计量数据索引模版
      curl --location --request POST 'http://kodo-inner.forethought-kodo:9527/v1/es/create_metering'
        
      # 【特别注意】 - 计量数据需要迁移至ES的情况下才能执行; 执行计量数据迁移命令, 默认迁移90天的数据至 ES 
      curl --location --request POST 'http://kodo-inner.forethought-kodo:9527/v1/migration/influxdb_to_es'


  # 2022.06.06 迭代
  - seq: 55
    database: |-
      
      -- 创建指标集 RP 配置表
      CREATE TABLE `main_metric_rp` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀metrp_',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `dbUUID` varchar(48) NOT NULL COMMENT 'influx/TDengine 对应实例的DB名的uuid(来源不同的uuid, 其前缀不同)',
        `dbName` varchar(48) NOT NULL DEFAULT '' COMMENT 'DB 原始名称',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '指标集名称',
        `duration` varchar(48) NOT NULL DEFAULT '' COMMENT '指标集的数据保留时间，此处单位为小时(d), 例如1d,7d',
        `rpName` varchar(48) NOT NULL COMMENT '数据保留策略名称',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- biz_snapshots中type去除限定
      alter table biz_snapshots modify column `type` varchar(64) NOT NULL DEFAULT 'logging' COMMENT '快照类型';
      
      -- 插入付费版工作空间使用量和计费统计公式
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('MeteringUnitPriceConfig', 'priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式', '{\"ts\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 300)\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 10, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1.5, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000000, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);
      
      -- 更新使用量统计公式（非出账单）
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('UsageStatisticalFormula','工作空间使用量统计公式（非计费公式）','{\"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum_pv\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"ts\": {\"countEquation\": \"max(0, ts_count - count * 300)\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"api_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"browser_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


  # 2022.06.21 迭代
  - seq: 56
    confg:
      innerApp: |-
        ; server 配置项下追加`cloudAcntBindWkspIdCodeAge`配置，设置绑定云账号操作的缓存时长
        [server]
        cloudAcntBindWkspIdCodeAge = 1800
        
        ; 阿里云云市场跳转相关配置, 阿里云节点需要设置 isOpen=true, 其他节点设置为false
        [aliyunCloudMarket]
        isOpen = false
        secret = "云市场的secret"
    
    database: |-
      
      -- 基础对象标签信息表
      CREATE TABLE `biz_object_label` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL COMMENT '全局唯一ID,用于获取具体对象的标签',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `labels` json DEFAULT NULL COMMENT '标签信息',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `label_uuid` (`workspaceUUID`,`uuid`) COMMENT '由 workspaceUUID,uuid 唯一确定'
      ) comment='基础对象标签信息' ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 调整 时序数据库实例表, 新增数据库类型字段 和 优先级字段
      ALTER TABLE `main_influx_instance` 
      ADD COLUMN `dbType` ENUM('influxdb', 'tdengine') NOT NULL DEFAULT 'influxdb' COMMENT '实例的引擎类型' AFTER `pwd`,
      ADD COLUMN `priority` INT(11) NOT NULL DEFAULT '50' COMMENT '新建DB时选择实例的依据，默认选择优先级最高的实例创建DB' AFTER `dbType`;
      
      -- 调整时序数据库 db 表， 新增db引擎类型字段
      ALTER TABLE `main_influx_db` 
      ADD COLUMN `dbType` ENUM('influxdb', 'tdengine') NULL DEFAULT 'influxdb' AFTER `cqrp`;
      
      -- 工作空间表新增ES索引是否聚合的标识字段, 工作空间新增字段`supportJsonMessage` 用于标识工作空间是否支持 jsonMessage
      ALTER TABLE main_workspace ADD COLUMN esIndexMerged BOOLEAN DEFAULT false COMMENT '空间ES索引是否合并，默认值是false，不合并'  AFTER `billingState`, 
      ADD COLUMN `supportJsonMessage` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '空间是否支持JSON类型的message字段，默认是false，不使用JSON类型的message' AFTER `esIndexMerged`;
      
      -- RUM 配置表新增 自定义标识字段
      ALTER TABLE `biz_rum_cfg` 
      ADD COLUMN `customIdentity` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '用户自定义标识' AFTER `jsonContent`;
      
      -- 为 main_es_instance 添加 versionType 区分集群版本
      ALTER TABLE main_es_instance ADD COLUMN versionType enum('free', 'pay', 'unlimited') DEFAULT 'unlimited' COMMENT '集群类型，free免费用户使用，pay付费用户使用，unlimited没有限制' AFTER `extend`;
      
      -- pipeline 表添加 extend 字段，支持存 json 数据
      alter table biz_pipeline add column `extend` json DEFAULT NULL COMMENT '额外配置数据' after `isSysTemplate`;
      
      -- 初始化 pipeline 表新增的 extend 字段的初始值
      update biz_pipeline set extend='{}' where extend is NULL;
      
      -- 设置 biz_pipeline 表中历史数据的 category 
      update biz_pipeline set category='logging' where status!=3 and category='' and isSysTemplate=0;

    curl: |-

      # 【inner api 服务器执行】更新进程类别为基础对象类别，2022-06-21版本后进程类别合入基础对象类别
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_06_21_process_checker"}'


  # 2022.07.07 迭代
  - seq: 57
    confg:
      innerApp: |-
        ; 配置文件中 redis 配置追加 poolSize， minIdle 两项配置
        [redis]
        poolSize = 10
        minIdle = 10
        
        ;  配置文件中 新增 trace 配置
        [tracer]
        service = "inner-app"
        
        ; 追加环境变量配置， 用于支持 trace
        DD_TRACE_ENABLED = true
        DD_SERVICE = inner-app
        DD_TRACE_AGENT_PORT = 9529
        DD_AGENT_HOST = status.hostIP

  # 2022.07.21 迭代
  - seq: 58
    database: |-
      
      -- 视图变量 type 字段新增枚举值 
      ALTER TABLE `biz_variable` 
      CHANGE COLUMN `type` `type` ENUM('QUERY', 'CUSTOM_LIST', 'ALIYUN_INSTANCE', 'TAG', 'FIELD', 'LOGGING', 'TRACING', 'RUM', 'SECURITY') NOT NULL COMMENT '类型' ;
      
      -- 规则表的 type 字段新增枚举值
      ALTER TABLE `biz_rule` 
      CHANGE COLUMN `type` `type` ENUM('trigger', 'baseline', 'aggs', 'cloud_correlation_switch', 'logbackup', 'slo_detect', 'slo_compute', 'bot_obs') NOT NULL DEFAULT 'trigger' ;


  # 2022.08.04 迭代
  - seq: 59
    database: |-
      
      -- 黑名单 type 字段新增枚举值
      ALTER TABLE `biz_data_blacklist_rule`
      CHANGE COLUMN `type` `type` ENUM('object', 'custom_object', 'logging', 'keyevent', 'tracing', 'rum', 'network', 'security', 'profiling', 'metric') NOT NULL DEFAULT 'logging' COMMENT '数据源类型' ;
      
      -- 工作空间新增 isLocked 和 lockAt 记录空间的锁定状态和锁定时间
      ALTER TABLE `main_workspace` 
      ADD COLUMN `isLocked` TINYINT(1) NOT NULL DEFAULT '0' AFTER `supportJsonMessage`,
      ADD COLUMN `lockAt` INT(11) NOT NULL DEFAULT '-1' AFTER `isLocked`;

      -- 工作空间新添针对聚合,非聚合索引的配置信息字段
      ALTER TABLE `main_workspace` ADD COLUMN `esIndexSettings` json NULL COMMENT '索引配置信息' AFTER `durationSet`;
      
      -- 变更黑名单source字段大小
      ALTER TABLE `biz_data_blacklist_rule` CHANGE COLUMN `source` `source` VARCHAR(128) NOT NULL DEFAULT '' COMMENT '数据来源';
      
      -- main_account 表的 username 字段添加索引, 并添加已使用过的标记
      ALTER TABLE `main_account` 
      ADD COLUMN `isUsed` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '标记账号是否登录过DF系统' AFTER `nameSpace`,
      ADD INDEX `uk_username` (`username` ASC) COMMENT 'DF登录用户名加索引';
      
      -- 更新新添加字段esIndexSettings 默认值为{}
      UPDATE main_workspace SET esIndexSettings= '{}';
      
      -- 将曾经登录过DF系统的账号标记为已使用账号
      UPDATE main_account set isUsed=1 where uuid in (select distinct(accountUUID) from biz_account_login_history where status=0);

  # 2022.08.18 迭代
  - seq: 60
    database: |-
      -- biz_dashboard表新添isPublic,添加的仪表板和查看器是否公开
      ALTER TABLE `biz_dashboard` ADD COLUMN `isPublic` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否公开展示,1代表公开,0代表仅自己可见' AFTER `ownerType`;

      -- biz_notes表新添isPublic,添加的快照是否公开
       ALTER TABLE `biz_notes` ADD COLUMN `isPublic` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否公开展示,1代表公开,0代表仅自己可见' AFTER `createdWay`;

      -- biz_snapshots表新添isPublic,添加的快照是否公开
       ALTER TABLE `biz_snapshots` ADD COLUMN `isPublic` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否公开展示,1代表公开,0代表仅自己可见' AFTER `content`;

      -- rum 配置表新增 appId 字段，对外替换uuid
      ALTER TABLE `biz_rum_cfg` 
      ADD COLUMN `appId` VARCHAR(128) NOT NULL DEFAULT '' AFTER `workspaceUUID`,
      ADD INDEX `k_appid` (`appId` ASC);
      
      -- 同步 rum appId 数据
      update biz_rum_cfg set appId=uuid where status=0 and appId="";

  # 2022.09.01 迭代
  - seq: 61
    env: |-
      # ddtrace版本更新为1.4.3,ddtrace环境变量名DATADOG_PATCH_MODULES,更新为DD_PATCH_MODULES, 变量值不变
      DATADOG_PATCH_MODULES -->  DD_PATCH_MODULES

      # ddtrace无效变量值变更
      DATADOG_TRACE_AGENT_PORT -->  DD_AGENT_PORT

    database: |-
      -- 新建 日志备份配置表
      CREATE TABLE `biz_logging_backup_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, lgbp-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(256) NOT NULL DEFAULT '' COMMENT '备份规则名',
        `conditions` text NOT NULL COMMENT 'dql格式的过滤条件',
        `extend` json DEFAULT NULL COMMENT '额外配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 添加日志索引配置表`biz_logging_index_cfg`
      CREATE TABLE `biz_logging_index_cfg` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID, lgim-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(256) NOT NULL DEFAULT '' COMMENT '索引名称',
        `conditions` text NOT NULL COMMENT 'dql格式的过滤条件',
        `duration` varchar(48) NOT NULL DEFAULT '' COMMENT '数据保留时长',
        `sortNo` int(11) NOT NULL DEFAULT '0' COMMENT '排序值, 值越大优先级越高',
        `setting` json DEFAULT NULL COMMENT '索引分片设置',
        `extend` json DEFAULT NULL COMMENT '额外配置数据',
        `status` int(11) NOT NULL DEFAULT '0' COMMENT '状态 0: ok/1: 故障/2: 停用/3: 删除',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 工作空间表设置 日志多索引配置开关
      ALTER TABLE `main_workspace` 
      ADD COLUMN `isOpenLogMultipleIndex` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否开启日志多索引配置' AFTER `lockAt`;


      -- 工作空间使用量统计公式, 添加backup_log_bytes 备份日志数据容量统计
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('UsageStatisticalFormula','工作空间使用量统计公式（非计费公式）','{\"ts\": {\"countEquation\": \"max(0, ts_count - count * 300)\", \"discountQuantity\": 0}, \"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum_pv\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"api_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"browser_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log_bytes\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


      -- 工作空间使用量和计费统计公式, 添加backup_log_bytes容量计算公司
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('MeteringUnitPriceConfig','priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式','{\"ts\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 300)\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 10, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 0.7, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1.2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000000, \"discountQuantity\": 0}, \"backup_log_bytes\": {\"price\": 0.007, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1073741824, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


      -- 修改监控默认分组名为默认
      UPDATE biz_monitor SET name= '默认' where name='默认分组' and status =0;

    curl: |-

      # 【inner api 服务器执行】将biz_rule 中的备份日志规则迁移至 新的 备份日志表中，并做数据格式处理
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_09_01_log_backup"}'

  # 2022.09.15 迭代
  - seq: 62
    database: |-
      
      -- 静默管理表biz_mute新增重复配置定时字段 crontabDuration, crontab, 重复过期时间字段 repeatExpire
      ALTER TABLE `biz_mute`
      ADD COLUMN `crontabDuration` int(11) NOT NULL DEFAULT '0' COMMENT '重复静默时, 调用func的crontabDuration参数, 单位为 s' AFTER `end`,
      ADD COLUMN `crontab` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '重复静默时, 调用func的crontab参数' AFTER `crontabDuration`,
      ADD COLUMN `repeatExpire` int(11) NOT NULL DEFAULT '-1' COMMENT '过期时间, 0代表无过期时间,永久生效, -1为默认配置,非重复静默' AFTER `crontab`;


      -- 账号添加灰度发布标记字段
      ALTER TABLE `main_account`
      ADD COLUMN `canaryPublic` BOOLEAN DEFAULT false COMMENT 'true 为有灰度标志, false为没有' AFTER `status`;

      -- 规则表新增支持 自建监控器类型，并添加关联 keyRef 字段用来关联规则
      ALTER TABLE `biz_rule` 
      ADD COLUMN `refKey` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '关联key' AFTER `type`, 
      CHANGE COLUMN `type` `type` ENUM('trigger', 'baseline', 'aggs', 'cloud_correlation_switch', 'logbackup', 'slo_detect', 'slo_compute', 'bot_obs', 'self_built_trigger') NOT NULL DEFAULT 'trigger' ,
      ADD INDEX `k_refkey` (`refKey` ASC);

    curl: |-

      # 【inner api 服务器执行】将biz_data_blacklist_rule 中的的conditions 中not in 和 not match 替换为notin not match
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_09_15_blacklist_notin"}'

  # 2022.09.29 迭代
  - seq: 63
    database: |-
      --  新增biz_field_management 字段管理
      CREATE TABLE `biz_field_management` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 field-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `name` varchar(256) NOT NULL DEFAULT '' COMMENT '字段名',
        `fieldType`  enum('text','number','time','percent') NOT NULL DEFAULT 'text',
        `desc` varchar(512) NOT NULL DEFAULT '' COMMENT '描述信息',
        `sysField` int(1) NOT NULL DEFAULT '0' COMMENT '自定义字段或者 系统内置字段, 1代表系统内置字段, 0代表自定义字段',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_name` (`name`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 笔记新增`extend`字段用于存储额外拓展字段数据
      ALTER TABLE `biz_notes`
      ADD COLUMN `extend` JSON NULL DEFAULT NULL COMMENT '额外拓展字段' AFTER `isPublic`;

      -- 为笔记中新增的 extend 字段设置默认值
      update `biz_notes` set extend='{}' where extend is NULL;


      -- biz_mute表新增muteRange字段
      ALTER TABLE `biz_mute`
      ADD COLUMN `muteRanges` JSON NULL COMMENT '静默范围, []代表所有' AFTER `type`;

      -- biz_mute表muteRange字段 设置默认值
      UPDATE biz_mute set muteRanges='[]';
      

    curl: |-

      # 【inner api 服务器执行】将biz_mute 老数据的 tags和muteRanges进行更新
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_mute_tags_range_2022_09_29"}'

      #  data_package 分发数据包命令 data_package_task.distribute_data_package(keys=[internal_field_cfg]) 的参数 keys 需要新增值`internal_field_cfg`:
      # 【inner api 服务器执行】 同步拉取并更新字段管理文件
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/tasks/execute_task_func' \
      -H 'Content-Type: application/json' \
      --data-raw $'{"script_name": "timed_sync_field_cfg_template", "func_name": "timed_sync_pull", "funcKwargs": {"need_sync_field_cfg": true}}' \
      --compressed


      # 在部署完成之后 执行该操作【inner api 服务器执行】重新生成所有的conditions,
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_09_15_blacklist_notin"}'
      
      # 清理 kodo 侧已删除工作空间但未清理 token 缓存的问题
      curl --request DELETE 'http://kodo-inner.forethought-kodo:9527/v1/rediskey?key=tkn_info*' --data-raw ''

      # 在部署完成之后 执行该操作【inner api 服务器执行】重新生成rum 相应的的conditions,
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_09_29_blacklist_rum"}'
      


  # 2022.10.20 迭代
  - seq: 64
    database: |-
      
      -- 新增工作空间系统配置表
      CREATE TABLE `main_workspace_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 wkcfg-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `keyCode` enum('StoreSchemeCfg', '') CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '' COMMENT '配置项Code',
        `config` json NOT NULL COMMENT '配置信息',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_key_code` (`keyCode`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 工作空间新增 datastore 字段保存工作空间的数据存储信息
      ALTER TABLE `main_workspace` 
      ADD COLUMN `datastore` JSON NULL DEFAULT NULL COMMENT '数据存储信息' AFTER `durationSet`;
      
      -- 设置 main_workspace 表中的 datastore 值， 上线时需要批量更新历史工作空间数据中的字段值
      -- update main_workspace set datastore='{}' where datastore is null and status=0;
      
      
      -- 设置时序数据库类型为 influxdb 的工作空间的 datastore 配置值 
      update main_workspace set `datastore`=JSON_OBJECT("metric", "influxdb", "rum", "es", "logging", "es", "network", "es", "tracing", "es", "keyevent", "es", "security", "es", "backup_log", "es", "object", "es", "object_history", "es", "custom_object", "es") where `status` = 0 and dbUUID in (select uuid from main_influx_db where dbType='influxdb' and status=0);

      -- 设置时序数据库类型为 tdengine 的工作空间的 datastore 配置值(区别仅是 metric 的值)
      update main_workspace set `datastore`=JSON_OBJECT("metric", "tdengine", "rum", "es", "logging", "es", "network", "es", "tracing", "es", "keyevent", "es", "security", "es", "backup_log", "es", "object", "es", "object_history", "es", "custom_object", "es") where `status` = 0 and dbUUID in (select uuid from main_influx_db where dbType='tdengine' and status=0);

    curl: |-

      # 在部署完成之后 执行该操作【inner api 服务器执行】重新生成所有的biz_rule表中的jsonScript, 本地迭代修改noDataPeriodCount字段为noDataInterval,需要将count重新计算为noDataInterval的时间分钟格式
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_10_20_checker_jsonscript_update"}'


  # 2022.11.03 迭代
  - seq: 65
    database: |-
      
      -- 索引绑定外部 SLS project 功能中添加的部分外部字段      
      ALTER TABLE `biz_logging_index_cfg` 
      ADD COLUMN `isBindCustomStore` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否为绑定的自定义存储' AFTER `setting`,
      ADD COLUMN `queryType` VARCHAR(64) NOT NULL DEFAULT 'logging' COMMENT '外部store的查询类型' AFTER `isBindCustomStore`,
      ADD COLUMN `exterStoreProject` VARCHAR(256) NOT NULL DEFAULT '' COMMENT '外部Store的上层标识' AFTER `queryType`;
      
      -- main_workspace表新增loggingCutSize字段记录超大日志切割大小, 新增`makeResourceExceptionCode`记录资源开通过程中错误的Code
      ALTER TABLE `main_workspace`
      ADD COLUMN `loggingCutSize` int(11) NOT NULL DEFAULT '10240' COMMENT '超大日志切割基础单位,单位:字节byte, SLS 工作空间 默认为 2048byte， ES 工作空间默认为10240byte' AFTER `esIndexMerged`,
      ADD COLUMN `makeResourceExceptionCode` VARCHAR(256) NOT NULL DEFAULT '' COMMENT '工作空间开通资源时的异常信息Code' AFTER `isOpenLogMultipleIndex`;


  # 2022.11.17 迭代
  - seq: 66
    database: |-

      -- 新增成员组表
      CREATE TABLE `biz_account_group` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 group-',
        `name` varchar(48) NOT NULL DEFAULT '' COMMENT '成员组名称',
        `workspaceUUID` varchar(64) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_name` (`name`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增成员组和成员关联表
      CREATE TABLE `biz_account_group_relation` (
      `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 rlag-',
      `groupUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '成员组 uuid',
      `accountUUID`  varchar(48) NOT NULL DEFAULT '' COMMENT '成员账户uuid',
      `status` int(11) NOT NULL DEFAULT '0',
      `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      `createAt` int(11) NOT NULL DEFAULT '-1',
      `deleteAt` int(11) NOT NULL DEFAULT '-1',
      `updateAt` int(11) NOT NULL DEFAULT '-1',
      PRIMARY KEY (`id`),
      UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      KEY `k_group_uuid` (`groupUUID`),
      KEY `k_acnt_uuid` (`accountUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- 新增pipeline关联表, name, category, workspaceUUID为datakit侧单独需求添加的字段
      CREATE TABLE `biz_pipeline_relation` (
      `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
      `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 rlag-',
      `name` varchar(256) NOT NULL DEFAULT '' COMMENT 'PL文件名',
      `source` varchar(256) NOT NULL DEFAULT '' COMMENT 'source来源',
      `category` varchar(48) NOT NULL DEFAULT '' COMMENT 'pipeline类型',
      `pipelineUUID`  varchar(48) NOT NULL DEFAULT '' COMMENT '成员账户uuid',
      `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
      `status` int(11) NOT NULL DEFAULT '0',
      `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
      `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
      `createAt` int(11) NOT NULL DEFAULT '-1',
      `deleteAt` int(11) NOT NULL DEFAULT '-1',
      `updateAt` int(11) NOT NULL DEFAULT '-1',
      PRIMARY KEY (`id`),
      UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
      KEY `k_source` (`source`),
      KEY `k_pipeline_uuid` (`pipelineUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      -- biz_pipeline表新增asDefault字段, 用户具体类型使用默认pipeline
      ALTER TABLE `biz_pipeline`
      ADD COLUMN `asDefault` BOOLEAN DEFAULT false COMMENT '是否该类型默认pipeline' AFTER `category`;

    curl: |-
      # 【inner api 服务器执行】执行 fix_update_pipeline_relation.py 操作 更新biz_pipeline配置表及biz_pipeline_relation表
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_update_pipeline_relation"}'

      #【inner api 服务器执行】重新生成所有内置视图的绑定字段的数据结构
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_11_17_update_dashboard_bidding"}'


  # 2022.12.01 迭代
  - seq: 67
    config:
      core: |-
        # 原有的 bossSettlementCode 配置废弃, 其可选值不变，仅将 key 变更为 basicEnvCode, 表示基础环境供应商Code
        # 目前可选值为 阿里云节点: aliyun, AWS节点: aws; 华为云节点: huawei; 默认值为 aliyun
        basicEnvCode: aliyun
        
        # 当前基础环境所在区域的Code (根据 basicEnvCode 的不同，可以设置不同的值, 默认为 cn-hangzhou)
        basicEnvRegionCode: cn-hangzhou

    database: |-

      -- 新增外部数据访问配置信息表
      CREATE TABLE `biz_external_resource_access_config` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 erac-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `config` json DEFAULT NULL COMMENT '访问配置信息',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 新增 索引字段映射配置表
      CREATE TABLE `biz_index_field_mapping` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 indfm-',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间 uuid',
        `indexCfgUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '索引配置的 uuid',
        `field` varchar(256) NOT NULL DEFAULT '' COMMENT '字段名',
        `originalField` varchar(256) NOT NULL DEFAULT '' COMMENT '原始字段名',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_index_cfg_uuid` (`indexCfgUUID`),
        KEY `k_field` (`field`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

      
      -- 索引配置表 支持外部绑定索引相关功能添加的字段
      ALTER TABLE `biz_logging_index_cfg` 
      ADD COLUMN `exterStoreName` VARCHAR(256) NOT NULL DEFAULT '' COMMENT '与name互为映射的外部存储的名字' AFTER `exterStoreProject`,
      ADD COLUMN `externalResourceAccessCfgUUID` VARCHAR(48) NOT NULL DEFAULT '' COMMENT '外部资源访问配置UUID' AFTER `extend`,
      ADD COLUMN `storeType` ENUM('', 'es', 'sls') NOT NULL DEFAULT '' COMMENT '存储类型, 空值表示与工作空间默认数据存储类型保持一致' AFTER `externalResourceAccessCfgUUID`,
      ADD COLUMN `region` VARCHAR(45) NOT NULL DEFAULT '' COMMENT '目标地域' AFTER `storeType`,
      ADD COLUMN `isPublicNetworkAccess` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否走公网访问' AFTER `region`,
      ADD INDEX `k_external_resource_access_cfg_uuid` (`externalResourceAccessCfgUUID` ASC);
      
      -- 视图变量表新增`isHiddenAsterisk`字段用来控制是否隐藏星号，默认不隐藏
      ALTER TABLE `biz_variable` 
      ADD COLUMN `isHiddenAsterisk` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是隐藏星号' AFTER `hide`;
      
      -- 修改工作空间名称字段长度
      ALTER TABLE `main_workspace` 
      CHANGE COLUMN `name` `name` VARCHAR(256) NULL DEFAULT NULL ;

      -- 新增 serviceCatelog 服务清单配置字段, 调整字段service大小
      ALTER TABLE `main_apm_config`
      ADD COLUMN `serviceCatelog` text NOT NULL COMMENT '服务清单配置信息' AFTER `service`,
      CHANGE COLUMN `service` `service` VARCHAR(256) NOT NULL DEFAULT '' COMMENT '服务名';
      
      -- 软删除 已删除仪表板的绑定字段记录
      update biz_dashboard_bidding set status=3 where dashboardUUID in (select uuid from biz_dashboard where status=3);

    curl: |-
      
      # 【inner api 服务器执行】执行 fix_update_inner_config_order.py 操作 更新main_custom_config配置表及config字段
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_update_inner_config_order"}'


  # 2022.12.15 迭代
  - seq: 68
    database: |-

      -- 新增仪表板轮播表
      CREATE TABLE `biz_dashboard_carousel` (
        `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增 ID',
        `uuid` varchar(48) NOT NULL DEFAULT '' COMMENT '全局唯一 ID 前缀 csel-',
        `name` varchar(128) NOT NULL DEFAULT '' COMMENT '轮播名称',
        `workspaceUUID` varchar(48) NOT NULL DEFAULT '' COMMENT '工作空间UUID',
        `accountUUID` varchar(256) NOT NULL DEFAULT '' COMMENT '账户uuid',
        `dashboardUUIDs` json NOT NULL COMMENT '仪表板轮播列表',
        `intervalTime` varchar(48) NOT NULL COMMENT '轮播频率',
        `status` int(11) NOT NULL DEFAULT '0',
        `creator` varchar(64) NOT NULL DEFAULT '' COMMENT '创建者 account-id',
        `updator` varchar(64) NOT NULL DEFAULT '' COMMENT '更新者 account-id',
        `createAt` int(11) NOT NULL DEFAULT '-1',
        `deleteAt` int(11) NOT NULL DEFAULT '-1',
        `updateAt` int(11) NOT NULL DEFAULT '-1',
        PRIMARY KEY (`id`),
        UNIQUE KEY `uk_uuid` (`uuid`) COMMENT 'UUID 做成全局唯一',
        KEY `k_ws_uuid` (`workspaceUUID`),
        KEY `k_acount_uuid` (`accountUUID`),
        KEY `k_name` (`name`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
      
      -- 账号*工作空间关系表 新增用户自定义的 工作空间备注信息字段
      ALTER TABLE `main_account_workspace` 
      ADD COLUMN `workspaceNote` TEXT(256) NOT NULL COMMENT '自定义工作空间备注' AFTER `waitAudit`;
      
      -- 图表添加 是否为工作空间关键指标查询标记, 默认为否
      ALTER TABLE `biz_chart`
      ADD COLUMN `isWorkspaceKeyIndicator` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否为工作空间关键指标的查询' AFTER `extend`;

      -- 更新工作空间配置表 main_workspace_config keyCode枚举类型 商业版空间使用量限制字段 usageLimit, 空间菜单栏管理字段 wsMenuCfg
      ALTER TABLE `main_workspace_config`
      MODIFY COLUMN `keyCode` enum('StoreSchemeCfg','UsageLimit','WsMenuCfg') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'StoreSchemeCfg';

      -- 更新邮件通知配置表 biz_email type枚举类型 商业版空间使用量限制字段 usageAlready
      ALTER TABLE `biz_email`
      MODIFY COLUMN `type` enum('almost','already','invitation', 'usageAlready') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'almost';
      
      -- 免费额度配置参数更新
      INSERT INTO `main_config`(`keyCode`, `description`, `value`) VALUES ('FreeLimitV2', '免费额度', '{\"ts\": 3000, \"job\": 100000, \"rum_pv\": 2000, \"logs\": 1000000, \"trace\": 8000, \"profile\": 60, \"dialing_api\": 200000}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);


      -- 工作空间使用量统计公式, 添加 profile, network 数据容量统计
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('UsageStatisticalFormula','工作空间使用量统计公式（非计费公式）','{\"ts\": {\"countEquation\": \"max(0, ts_count - count * 300)\", \"discountQuantity\": 0}, \"job\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"rum_pv\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"datakit\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"logging\": {\"countEquation\": \"count + keyevent_count + security_count\", \"discountQuantity\": 0}, \"tracing\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"api_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"browser_test\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"profile\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"network\": {\"countEquation\": \"count\", \"discountQuantity\": 0}, \"backup_log_bytes\": {\"countEquation\": \"count\", \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);

      -- 工作空间使用量和计费统计公式, 添加 profile, network 容量计算公式
      INSERT INTO `main_config` (`keyCode`,`description`,`value`) VALUES ('MeteringUnitPriceConfig','priceQuantity表示价格对应的数量，price表示priceQuantity数量对应的价格，discountQuantity表示免费额度，equation是计算公式, count_equation是账单计算时的统计数量计算公式','{\"ts\": {\"price\": 3, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"max(0, count - datakit_count * 300)\", \"priceQuantity\": 1000, \"discountQuantity\": 0}, \"job\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"sms\": {\"price\": 1, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 10, \"discountQuantity\": 0}, \"rum_pv\": {\"price\": 0.7, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"datakit\": {\"price\": 3, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"logging\": {\"price\": 1.2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"sum([count, keyevent_count, security_count])\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"tracing\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1000000, \"discountQuantity\": 0}, \"api_test\": {\"price\": 1, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"backup_log\": {\"price\": 2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000000, \"discountQuantity\": 0}, \"profile\": {\"price\": 0.2, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 10000, \"discountQuantity\": 0}, \"network\": {\"price\": 2, \"equation\": \"count*price\", \"countEquation\": \"count\", \"priceQuantity\": 1, \"discountQuantity\": 0}, \"backup_log_bytes\": {\"price\": 0.007, \"equation\": \"(count/priceQuantity)*price\", \"countEquation\": \"count\", \"priceQuantity\": 1073741824, \"discountQuantity\": 0}}') ON DUPLICATE KEY UPDATE description=VALUES(description),value=VALUES(value);




  # 2022.12.29 迭代
  - seq: 69
    database: |-
      -- 账号表新增 MFA 开关 和 MFA 密钥存储字段
      ALTER TABLE `main_account` 
      ADD COLUMN `enableMFA` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否开启MFA认证，默认为0，表示未开启' AFTER `status`,
      ADD COLUMN `mfaSecret` VARCHAR(256) NOT NULL DEFAULT '' COMMENT 'MFA密钥，默认为空字符串' AFTER `enableMFA`;
      
      
      -- 更新工作空间配置表 main_workspace_config keyCode枚举类型 keyCode新增IP白名单 WhileList枚举类型
      ALTER TABLE `main_workspace_config`
      MODIFY COLUMN `keyCode` enum('StoreSchemeCfg','UsageLimit','WsMenuCfg', 'WhileList') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'StoreSchemeCfg';

    curl: |-
      
      # 【inner api 服务器执行】执行 fix_2022_12_29_clear_obs_checker.py 操作 删除所有的 bot_obs 智能巡检规则
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_12_29_clear_obs_checker"}'

      # 【inner api 服务器执行】执行 fix_update_pipeline_rum_extend.py 操作 更新biz_pipeline, 字段extend中appid字符串为列表
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_update_pipeline_rum_extend"}'



  # 2023.01.12 迭代
  - seq: 70
    database: |-
      -- 账号表新增 默认语言字段
      ALTER TABLE `main_account` 
      ADD COLUMN `language` VARCHAR(48) NOT NULL DEFAULT '' AFTER `mfaSecret`;

      -- 账号表新增 默认语言字段
      ALTER TABLE `biz_field_management`
      ADD COLUMN `descEn` VARCHAR(1024) NOT NULL DEFAULT '' AFTER `desc`;

      -- 日志索引配置表中的字段 storeType 新增可选类型 opensearch
      ALTER TABLE `biz_logging_index_cfg` 
      CHANGE COLUMN `storeType` `storeType` ENUM('', 'es', 'sls', 'opensearch') NOT NULL DEFAULT '' COMMENT '存储类型, 空值表示与工作空间默认数据存储类型保持一致' ;
      
      -- 集成表新增 language 语言版本字段，用于支持多语言
      ALTER TABLE `biz_integration` 
      ADD COLUMN `language` VARCHAR(64) NOT NULL DEFAULT 'zh' COMMENT '语言类型' AFTER `meta`;

      -- 补全外部绑定索引的 字段映射数据
      update biz_index_field_mapping set originalField=field where status=0 and originalField="";

    curl: |-

      # 【inner api 服务器执行】执行 fix_update_rule_nodata_action.py 刷新监控器中创建阈值检测时,noDataAction的值为none的情况
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_update_rule_nodata_action"}'

      # 【inner api 服务器执行】再次执行优化后的 fix_2022_12_29_clear_obs_checker.py 操作 删除所有的 bot_obs 智能巡检规则
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/fix_data' -H 'Content-Type: application/json' --data-raw $'{"script_name": "fix_2022_12_29_clear_obs_checker"}'

      # 【inner api 服务器执行】 同步拉取并更新字段管理文件, 本次更新descEn字段, 数据库字段添加后, 执行
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/tasks/execute_task_func' \
      -H 'Content-Type: application/json' \
      --data-raw $'{"script_name": "timed_sync_field_cfg_template", "func_name": "timed_sync_pull", "funcKwargs": {"need_sync_field_cfg": true}}' \
      --compressed

      # 【inner api 服务器执行】同步更新视图模版
      curl 'http://0.0.0.0:5000/api/v1/inner/upgrade/tasks/execute_task_func' \
      -H 'Content-Type: application/json' \
      --data-raw $'{"script_name": "timed_sync_integration", "func_name": "timed_sync_gitee_code", "funcKwargs": {"need_sync_integration": true}}' \
      --compressed
