upgradeInfo:
  - seq: 1
    database: |-
      -- 配合授权链接生成文档时，允许隐藏部分接口
      ALTER TABLE `biz_main_auth_link`
        ADD COLUMN `showInDoc` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否在文档中显示'
        AFTER `throttlingJSON`;
  - seq: 2
    database: |-
      -- 提供函数文档中，按顺序排列的Python参数列表
      ALTER TABLE biz_main_func
      ADD COLUMN `argsJSON` json DEFAULT NULL COMMENT '位置参数JSON' AFTER definition;
      ALTER TABLE biz_main_func
      MODIFY COLUMN `kwargsJSON` json DEFAULT NULL COMMENT '命名参数JSON';

      -- 配合「函数可指定适用的工作空间」功能
      CREATE TABLE `biz_cache_df_workspace` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `uuid` char(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'UUID',
        `wsName` varchar(256) DEFAULT NULL COMMENT '名称',
        `dataJSON` json NOT NULL COMMENT '数据JSON',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `BIZ` (`id`),
        UNIQUE KEY `UUID` (`uuid`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='DataFlux工作空间（缓存）';

      CREATE TABLE `biz_rel_func_df_workspace` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `funcId` char(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '函数ID',
        `dfWorkspaceUUID` char(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'DataFlux 工作空间 UUID',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `BIZ` (`funcId`,`dfWorkspaceUUID`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='函数-DataFlux工作空间关联';
  - seq: 3
    database: |-
      -- 拼写错误：全局 offical -> official
      ALTER TABLE biz_main_script_set
      MODIFY COLUMN `type` varchar(64) NOT NULL DEFAULT 'user' COMMENT '类型 user|official';

      UPDATE biz_main_script_set SET `type` = 'official' WHERE `type` = 'offical';

      ALTER TABLE biz_main_script_set_export_history
      MODIFY COLUMN `exportType` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '导出类型 user|official';

      UPDATE biz_main_script_set_export_history SET `exportType` = 'official' WHERE `exportType` = 'offical';

      ALTER TABLE biz_main_script_set_import_history
      MODIFY COLUMN `importType` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '导入类型 user|official';

      UPDATE biz_main_script_set_import_history SET `importType` = 'official' WHERE `importType` = 'offical';

  # ft_data_processor_2020-03-05.sql
  - seq: 4
    database: |-
      -- 增加 category=check 的函数
      ALTER TABLE biz_main_func
      MODIFY COLUMN `category` varchar(64) NOT NULL DEFAULT 'general' COMMENT '类别 general|prediction|transformation|action|command|query|check';

      ALTER TABLE biz_main_func
      ADD COLUMN `extraConfigJSON` json DEFAULT NULL COMMENT '函数额外配置JSON' AFTER `kwargsJSON`;

      -- 函数增加 tag 功能
      ALTER TABLE biz_main_func
      ADD COLUMN `tagsJSON` json DEFAULT NULL COMMENT '函数标签JSON' AFTER `category`;

      -- 函数增加指定 crontab 功能
      ALTER TABLE biz_main_crontab_config
      MODIFY COLUMN `crontab` varchar(64) DEFAULT NULL COMMENT '执行频率（Crontab语法）';

      -- 自动触发配置增加 tag 功能
      ALTER TABLE biz_main_crontab_config
      ADD COLUMN `tagsJSON` json DEFAULT NULL COMMENT '自动触发配置标签JSON' AFTER `crontab`;

      -- 增加函数存储区功能
      CREATE TABLE `biz_main_func_store` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `key` varchar(256) NOT NULL COMMENT '键名',
        `valueJSON` json NOT NULL COMMENT '值JSON',
        `scope` varchar(64) NOT NULL COMMENT '范围',
        `expireAt` int(11) DEFAULT NULL COMMENT '过期时间（秒级UNIX时间戳）',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='函数存储';

  - seq: 5
    database: |-
      -- 自动触发配置增加重复检查
      ALTER TABLE biz_main_crontab_config
      ADD COLUMN `configHash` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '配置哈希' AFTER `saveResult`;

      ALTER TABLE biz_main_crontab_config
      ADD UNIQUE KEY `CONFIG_HASH` (`configHash`);

      -- 自动触发配置区分从UI/API创建
      ALTER TABLE biz_main_crontab_config
      ADD COLUMN `origin` varchar(64) NOT NULL DEFAULT 'api' COMMENT '来源 api|ui' AFTER `configHash`;

      UPDATE biz_main_crontab_config SET `origin` = 'ui';

      ALTER TABLE biz_main_crontab_config
      ADD KEY `ORIGIN` (`origin`);

      -- 授权链接区分从UI/API创建
      ALTER TABLE biz_main_auth_link
      ADD COLUMN `origin` varchar(64) NOT NULL DEFAULT 'api' COMMENT '来源 api|ui' AFTER `throttlingJSON`;

      UPDATE biz_main_auth_link SET `origin` = 'ui';

      ALTER TABLE biz_main_auth_link
      ADD KEY `ORIGIN` (`origin`);

  # ft_data_processor_2020-03-12.sql

  - seq: 6
    database: |-
      -- 删除多余字段
      ALTER TABLE `biz_main_script_set_import_history` DROP COLUMN `fileBLOB`;
      ALTER TABLE `biz_main_script_set_import_history` DROP COLUMN `isConfirmed`;

      -- 脚本存储区增加索引
      ALTER TABLE biz_main_func_store
      ADD UNIQUE KEY `BIZ` (`scope`, `key`);

  # ft_data_processor_2020-03-23.sql

  - seq: 7
    database: |-
      -- 删除多余字段
      ALTER TABLE `biz_main_script_set_export_history` DROP COLUMN `fileBLOB`;

      -- 脚本存储区表重建
      DROP TABLE IF EXISTS biz_main_func_store;

      CREATE TABLE `biz_main_func_store` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `key` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '键名',
        `valueJSON` json NOT NULL COMMENT '值JSON',
        `scope` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT 'GLOBAL' COMMENT '范围',
        `expireAt` int(11) DEFAULT NULL COMMENT '过期时间（秒级UNIX时间戳）',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`),
        UNIQUE KEY `BIZ` (`scope`,`key`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='函数存储';

      -- 自动触发配置支持自动过期
      ALTER TABLE `biz_main_crontab_config`
      ADD COLUMN `expireTime` timestamp NULL COMMENT '过期时间' AFTER `configHash`;

      -- 自动触发配置增加scope分区
      ALTER TABLE `biz_main_crontab_config`
      ADD COLUMN `scope` varchar(256) NOT NULL DEFAULT 'GLOBAL' COMMENT '范围' AFTER `saveResult`;

      -- 自动触发配置根据scope分区和configHash限制重复
      ALTER TABLE `biz_main_crontab_config`
      DROP KEY `CONFIG_HASH`;

      ALTER TABLE `biz_main_crontab_config`
      ADD UNIQUE KEY `SCOPE_CONFIG_HASH` (`scope`,`configHash`);

      -- 授权链接/自动触发配置origin 改为全大写
      ALTER TABLE `biz_main_crontab_config`
      MODIFY COLUMN `origin` varchar(64) NOT NULL DEFAULT 'API' COMMENT '来源 API|UI';

      ALTER TABLE `biz_main_auth_link`
      MODIFY COLUMN `origin` varchar(64) NOT NULL DEFAULT 'API' COMMENT '来源 API|UI';

      UPDATE `biz_main_crontab_config` SET `origin` = UPPER(`origin`);
      UPDATE `biz_main_auth_link` SET `origin` = UPPER(`origin`);

  # ft_data_processor_2020-04-14.sql

  - seq: 8
    database: |-
      -- 删除发布脚本创建的还原点（发布脚本不再创建还原点）
      DELETE FROM `biz_main_script_recover_point` WHERE `type` = 'publish';

  # ft_data_processor_2020-04-20.sql

  - seq: 9
    database: |-
      -- 新增批处理支持
      CREATE TABLE `biz_main_batch` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '兼任Token',
        `scriptSetId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本集ID',
        `scriptId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本ID',
        `funcId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '函数ID',
        `funcKwargsJSON` json NOT NULL COMMENT '函数参数JSON (kwargs)',
        `tagsJSON` json DEFAULT NULL COMMENT '批处理标签JSON',
        `origin` varchar(64) NOT NULL DEFAULT 'API' COMMENT '来源 API|UI',
        `showInDoc` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否在文档中显示',
        `isDisabled` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否禁用',
        `note` text COMMENT '备注',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`),
        KEY `ORIGIN` (`origin`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='批处理';

      -- 提高函数更新时间戳精度
      ALTER TABLE `biz_main_func`
      CHANGE `updateTime` `updateTime` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) on update CURRENT_TIMESTAMP(6);

      -- 新增自动触发任务任务信息
      CREATE TABLE `biz_main_crontab_task_info` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `crontabConfigId` char(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '自动触发配置ID',
        `queueTime` timestamp NULL DEFAULT NULL COMMENT '入队时间',
        `startTime` timestamp NULL DEFAULT NULL COMMENT '启动时间',
        `endTime` timestamp NULL DEFAULT NULL COMMENT '结束时间',
        `status` varchar(64) NOT NULL DEFAULT 'queued' COMMENT '状态 queued|pending|success|failure',
        `logMessageTEXT` text COMMENT '日志信息TEXT',
        `einfoTEXT` text COMMENT '错误信息TEXT',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`),
        KEY `CRONTAB_CONFIG_ID` (`crontabConfigId`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='自动触发任务信息';

      -- 新增批处理任务信息
      CREATE TABLE `biz_main_batch_task_info` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `batchId` char(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '批处理ID',
        `queueTime` timestamp NULL DEFAULT NULL COMMENT '入队时间',
        `startTime` timestamp NULL DEFAULT NULL COMMENT '启动时间',
        `endTime` timestamp NULL DEFAULT NULL COMMENT '结束时间',
        `status` varchar(64) NOT NULL DEFAULT 'queued' COMMENT '状态 queued|pending|success|failure',
        `logMessageTEXT` text COMMENT '日志信息TEXT',
        `einfoTEXT` text COMMENT '错误信息TEXT',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`),
        KEY `BATCH_ID` (`batchId`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='批处理任务信息';

      -- 修复注释错误
      ALTER TABLE `biz_main_script_log`
      CHANGE `messageTEXT` `messageTEXT` text NULL COMMENT '日志信息TEXT';

      -- 添加脚本类型标记
      ALTER TABLE `biz_main_script`
      ADD COLUMN `type` varchar(64) NOT NULL DEFAULT 'python' COMMENT '类型 python|javascript'
          AFTER `publishVersion`;

  # ft_data_processor_2020-06-09.sql

  - seq: 10
    database: |-
      -- 新增反馈功能
      CREATE TABLE `biz_main_feedback` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `descriptionTEXT` text COMMENT '描述TEXT',
        `locationHrefTEXT` text COMMENT '浏览器location.href内容TEXT',
        `vuexStateJSON` json COMMENT 'vuex state内容JSON',
        `screenshotBase64` longtext COMMENT '屏幕截图Base64',
        `contactMail` text COMMENT '联系邮件',
        `status` varchar(64) NOT NULL DEFAULT 'open' COMMENT '状态 open|close',
        `note` text COMMENT '备注',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='反馈';

  # ft_data_processor_2020-06-30.sql

  - seq: 11
    database: |-
      -- 官方脚本库自动备份
      CREATE TABLE `biz_main_official_script_lib_backup` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `scriptSetId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本集ID',
        `scriptSetTitle` varchar(256) DEFAULT NULL COMMENT '脚本集标题',
        `scriptSetDescription` text COMMENT '脚本集描述',
        `scriptSetRefName` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本集引用名',
        `scriptId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本ID',
        `scriptTitle` varchar(256) DEFAULT NULL COMMENT '脚本标题',
        `scriptDescription` text COMMENT '脚本描述',
        `scriptRefName` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT '脚本引用名',
        `scriptPublishVersion` bigint(20) NOT NULL DEFAULT '0' COMMENT '脚本发布版本',
        `scriptType` varchar(64) NOT NULL DEFAULT 'python' COMMENT '脚本类型 python|javascript',
        `scriptCode_cache` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT '脚本代码（缓存字段）',
        `scriptCodeMD5_cache` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '脚本代码MD5（缓存字段）',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        UNIQUE KEY `ID` (`id`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='官方脚本库备份';

      -- 操作记录
      CREATE TABLE `biz_main_operation_record` (
        `seq` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
        `id` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
        `userId` char(65) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '用户ID',
        `username` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '用户名',
        `clientId` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '客户端ID',
        `traceId` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '跟踪ID',
        `reqMethod` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '请求方法',
        `reqRoute` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT '请求路由',
        `reqQueryJSON` json DEFAULT NULL COMMENT '请求Query JSON',
        `reqParamsJSON` json DEFAULT NULL COMMENT '请求Params JSON',
        `reqBodyJSON` json DEFAULT NULL COMMENT '请求体JSON',
        `respStatusCode` int(3) unsigned DEFAULT NULL COMMENT '响应状态码',
        `respBodyJSON` json DEFAULT NULL COMMENT '响应体JSON',
        `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (`seq`),
        KEY `USER_ID` (`userId`),
        KEY `USERNAME` (`username`),
        KEY `CLIENT_ID` (`clientId`),
        KEY `TRACE_ID` (`traceId`),
        KEY `REQ_METHOD` (`reqMethod`),
        KEY `REQ_ROUTE` (`reqRoute`),
        KEY `CREATE_TIME` (`createTime`)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='操作记录';

      -- 扩充text字段为longtext
      ALTER TABLE biz_main_batch_task_info
        MODIFY COLUMN `logMessageTEXT` longtext COMMENT '日志信息TEXT',
        MODIFY COLUMN `einfoTEXT` longtext COMMENT '错误信息TEXT';

      ALTER TABLE biz_main_crontab_task_info
        MODIFY COLUMN `logMessageTEXT` longtext COMMENT '日志信息TEXT',
        MODIFY COLUMN `einfoTEXT` longtext COMMENT '错误信息TEXT';

      ALTER TABLE biz_main_env_variable
        MODIFY COLUMN `valueTEXT` longtext NOT NULL COMMENT '值';

      ALTER TABLE biz_main_feedback
        MODIFY COLUMN `descriptionTEXT` longtext COMMENT '描述TEXT',
        MODIFY COLUMN `locationHrefTEXT` longtext COMMENT '浏览器location.href内容TEXT';

      ALTER TABLE biz_main_script_failure
        MODIFY COLUMN `einfoTEXT` longtext COMMENT '错误信息';

      ALTER TABLE biz_main_script_log
        MODIFY COLUMN `messageTEXT` longtext COMMENT '日志信息TEXT';

      ALTER TABLE biz_main_task_result_data_processor
        MODIFY COLUMN `einfoTEXT` longtext COMMENT '错误信息TEXT';

  # ft_data_processor_2020-07-16.sql

  - seq: 12
    database: |-
      -- 清空操作记录数据
      TRUNCATE biz_main_operation_record;

  # ft_data_processor_2020-08-04.sql
